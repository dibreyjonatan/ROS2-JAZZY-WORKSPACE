[0.000000] (-) TimerEvent: {}
[0.000434] (articubot_one) JobQueued: {'identifier': 'articubot_one', 'dependencies': OrderedDict({'articubot_one': '/home/jonatan/ros2_ws/install/articubot_one'})}
[0.001207] (articubot_one) JobStarted: {'identifier': 'articubot_one'}
[0.097032] (articubot_one) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/jonatan/ros2_ws/build/articubot_one', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': '2ddf9c17-5cf4-48ad-bc40-f39f8ecbfeb7', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'jonatan', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'wayland', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'LESS': '-R', 'HOME': '/home/jonatan', 'OLDPWD': '/home/jonatan', 'DESKTOP_SESSION': 'ubuntu', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'ZSH': '/home/jonatan/.oh-my-zsh', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PAGER': 'less', 'PS1': '\\[\\e]0;\\u@\\h: \\w\\a\\]${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$', 'MANAGERPID': '2008', 'P9K_TTY': 'old', 'SYSTEMD_EXEC_PID': '2272', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3097', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'jonatan', '_P9K_SSH_TTY': '/dev/pts/2', 'JOURNAL_STREAM': '9:19463', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@wayland.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'jonatan', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/HP-EliteBook-x360-1030-G2:@/tmp/.ICE-unix/2219,unix/HP-EliteBook-x360-1030-G2:/tmp/.ICE-unix/2219', 'INVOCATION_ID': '1d5efdbd10c34d46a8570a6c200c5332', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.DBMW62', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/jonatan/ros2_ws/install/articubot_one:/opt/ros/jazzy', 'SHELL': '/usr/bin/zsh', 'TERMINATOR_UUID': 'urn:uuid:0947d2af-0509-4362-9f98-b841aba16eb4', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'P9K_SSH': '0', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/jonatan/ros2_ws/build/articubot_one', 'LC_ALL': 'en_US.UTF-8', '_P9K_TTY': '/dev/pts/2', 'XDG_DATA_DIRS': '/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/jonatan/ros2_ws/install/articubot_one/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/jonatan/ros2_ws/install/articubot_one:/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.104987] (-) TimerEvent: {}
[0.125846] (articubot_one) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/jonatan/ros2_ws/build/articubot_one/CTestConfiguration.ini\n'}
[0.126516] (articubot_one) StdoutLine: {'line': b'Parse Config file:/home/jonatan/ros2_ws/build/articubot_one/CTestConfiguration.ini\n'}
[0.126976] (articubot_one) StdoutLine: {'line': b'   Site: HP-EliteBook-x360-1030-G2\n'}
[0.127398] (articubot_one) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.127990] (articubot_one) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.128377] (articubot_one) StdoutLine: {'line': b'Create new tag: 20250518-1819 - Experimental\n'}
[0.128877] (articubot_one) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/jonatan/ros2_ws/build/articubot_one/CTestConfiguration.ini\n'}
[0.129286] (articubot_one) StdoutLine: {'line': b'Parse Config file:/home/jonatan/ros2_ws/build/articubot_one/CTestConfiguration.ini\n'}
[0.129902] (articubot_one) StdoutLine: {'line': b'Test project /home/jonatan/ros2_ws/build/articubot_one\n'}
[0.130321] (articubot_one) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.130745] (articubot_one) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.131124] (articubot_one) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.131513] (articubot_one) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.131948] (articubot_one) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.132357] (articubot_one) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.132786] (articubot_one) StdoutLine: {'line': b'test 1\n'}
[0.133308] (articubot_one) StdoutLine: {'line': b'    Start 1: laser_obstacle_test\n'}
[0.133909] (articubot_one) StdoutLine: {'line': b'\n'}
[0.134278] (articubot_one) StdoutLine: {'line': b'1: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/laser_obstacle_test.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_cmake_pytest/laser_obstacle_test.txt" "--command" "/usr/bin/python3" "-u" "-m" "pytest" "/home/jonatan/ros2_ws/src/articubot_one/test/pytest/test_laserObstacle.py" "-o" "cache_dir=/home/jonatan/ros2_ws/build/articubot_one/ament_cmake_pytest/laser_obstacle_test/.cache" "--junit-xml=/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/laser_obstacle_test.xunit.xml" "--junit-prefix=articubot_one"\n'}
[0.134671] (articubot_one) StdoutLine: {'line': b'1: Working Directory: /home/jonatan/ros2_ws/build/articubot_one\n'}
[0.134906] (articubot_one) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.205157] (-) TimerEvent: {}
[0.262253] (articubot_one) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/build/articubot_one':\n"}
[0.262433] (articubot_one) StdoutLine: {'line': b'1:  - /usr/bin/python3 -u -m pytest /home/jonatan/ros2_ws/src/articubot_one/test/pytest/test_laserObstacle.py -o cache_dir=/home/jonatan/ros2_ws/build/articubot_one/ament_cmake_pytest/laser_obstacle_test/.cache --junit-xml=/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/laser_obstacle_test.xunit.xml --junit-prefix=articubot_one\n'}
[0.305301] (-) TimerEvent: {}
[0.405581] (-) TimerEvent: {}
[0.505839] (-) TimerEvent: {}
[0.606113] (-) TimerEvent: {}
[0.706251] (articubot_one) StdoutLine: {'line': b'1: ============================= test session starts ==============================\n'}
[0.706418] (-) TimerEvent: {}
[0.706517] (articubot_one) StdoutLine: {'line': b'1: platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0\n'}
[0.712796] (articubot_one) StdoutLine: {'line': b'1: cachedir: /home/jonatan/ros2_ws/build/articubot_one/ament_cmake_pytest/laser_obstacle_test/.cache\n'}
[0.712975] (articubot_one) StdoutLine: {'line': b'1: rootdir: /home/jonatan/ros2_ws/src/articubot_one\n'}
[0.713070] (articubot_one) StdoutLine: {'line': b'1: plugins: launch-testing-3.4.4, ament-xmllint-0.17.2, ament-pep257-0.17.2, ament-copyright-0.17.2, ament-flake8-0.17.2, launch-testing-ros-0.26.7, ament-lint-0.17.2, cov-4.1.0, typeguard-4.1.5, colcon-core-0.19.0\n'}
[0.806593] (-) TimerEvent: {}
[0.907135] (-) TimerEvent: {}
[1.007535] (-) TimerEvent: {}
[1.107927] (-) TimerEvent: {}
[1.208325] (-) TimerEvent: {}
[1.273308] (articubot_one) StdoutLine: {'line': b'1: collected 3 items\n'}
[1.274728] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.308439] (-) TimerEvent: {}
[1.408704] (-) TimerEvent: {}
[1.413712] (articubot_one) StdoutLine: {'line': b'1: ../../src/articubot_one/test/pytest/test_laserObstacle.py F.F            [100%]\n'}
[1.413952] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.414122] (articubot_one) StdoutLine: {'line': b'1: =================================== FAILURES ===================================\n'}
[1.414672] (articubot_one) StdoutLine: {'line': b'1: ______________________________ test_node_creation ______________________________\n'}
[1.414967] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.415178] (articubot_one) StdoutLine: {'line': b'1:     def test_node_creation():\n'}
[1.415375] (articubot_one) StdoutLine: {'line': b'1:         rclpy.init\n'}
[1.415587] (articubot_one) StdoutLine: {'line': b'1:         try :\n'}
[1.415813] (articubot_one) StdoutLine: {'line': b'1: >           node=Obstacle()\n'}
[1.416021] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.416229] (articubot_one) StdoutLine: {'line': b'1: ../../src/articubot_one/test/pytest/test_laserObstacle.py:13: \n'}
[1.416435] (articubot_one) StdoutLine: {'line': b'1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n'}
[1.416645] (articubot_one) StdoutLine: {'line': b'1: ../../install/articubot_one/lib/python3.12/site-packages/articubot_one/obstacle_avoidance.py:15: in __init__\n'}
[1.416830] (articubot_one) StdoutLine: {'line': b'1:     super().__init__("Laser_Obstacle_Avoidance")\n'}
[1.416986] (articubot_one) StdoutLine: {'line': b'1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n'}
[1.417130] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.417285] (articubot_one) StdoutLine: {'line': b'1: self = <articubot_one.obstacle_avoidance.Obstacle object at 0x7215e5a0b890>\n'}
[1.417433] (articubot_one) StdoutLine: {'line': b"1: node_name = 'Laser_Obstacle_Avoidance'\n"}
[1.417591] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.418561] (articubot_one) StdoutLine: {'line': b'1:     def __init__(\n'}
[1.418788] (articubot_one) StdoutLine: {'line': b'1:         self,\n'}
[1.418986] (articubot_one) StdoutLine: {'line': b'1:         node_name: str,\n'}
[1.419160] (articubot_one) StdoutLine: {'line': b'1:         *,\n'}
[1.419331] (articubot_one) StdoutLine: {'line': b'1:         context: Optional[Context] = None,\n'}
[1.419500] (articubot_one) StdoutLine: {'line': b'1:         cli_args: Optional[List[str]] = None,\n'}
[1.419689] (articubot_one) StdoutLine: {'line': b'1:         namespace: Optional[str] = None,\n'}
[1.419869] (articubot_one) StdoutLine: {'line': b'1:         use_global_arguments: bool = True,\n'}
[1.420038] (articubot_one) StdoutLine: {'line': b'1:         enable_rosout: bool = True,\n'}
[1.420207] (articubot_one) StdoutLine: {'line': b'1:         start_parameter_services: bool = True,\n'}
[1.420375] (articubot_one) StdoutLine: {'line': b'1:         parameter_overrides: Optional[List[Parameter]] = None,\n'}
[1.420546] (articubot_one) StdoutLine: {'line': b'1:         allow_undeclared_parameters: bool = False,\n'}
[1.420766] (articubot_one) StdoutLine: {'line': b'1:         automatically_declare_parameters_from_overrides: bool = False,\n'}
[1.420933] (articubot_one) StdoutLine: {'line': b'1:         enable_logger_service: bool = False\n'}
[1.421162] (articubot_one) StdoutLine: {'line': b'1:     ) -> None:\n'}
[1.421347] (articubot_one) StdoutLine: {'line': b'1:         """\n'}
[1.421493] (articubot_one) StdoutLine: {'line': b'1:         Create a Node.\n'}
[1.421647] (articubot_one) StdoutLine: {'line': b'1:     \n'}
[1.421822] (articubot_one) StdoutLine: {'line': b'1:         :param node_name: A name to give to this node. Validated by :func:`validate_node_name`.\n'}
[1.421979] (articubot_one) StdoutLine: {'line': b'1:         :param context: The context to be associated with, or ``None`` for the default global\n'}
[1.422131] (articubot_one) StdoutLine: {'line': b'1:             context.\n'}
[1.422281] (articubot_one) StdoutLine: {'line': b'1:         :param cli_args: A list of strings of command line args to be used only by this node.\n'}
[1.422452] (articubot_one) StdoutLine: {'line': b'1:             These arguments are used to extract remappings used by the node and other ROS specific\n'}
[1.422651] (articubot_one) StdoutLine: {'line': b'1:             settings, as well as user defined non-ROS arguments.\n'}
[1.423117] (articubot_one) StdoutLine: {'line': b'1:         :param namespace: The namespace to which relative topic and service names will be prefixed.\n'}
[1.423363] (articubot_one) StdoutLine: {'line': b'1:             Validated by :func:`validate_namespace`.\n'}
[1.423575] (articubot_one) StdoutLine: {'line': b'1:         :param use_global_arguments: ``False`` if the node should ignore process-wide command line\n'}
[1.423871] (articubot_one) StdoutLine: {'line': b'1:             args.\n'}
[1.424059] (articubot_one) StdoutLine: {'line': b'1:         :param enable_rosout: ``False`` if the node should ignore rosout logging.\n'}
[1.424236] (articubot_one) StdoutLine: {'line': b'1:         :param start_parameter_services: ``False`` if the node should not create parameter\n'}
[1.424405] (articubot_one) StdoutLine: {'line': b'1:             services.\n'}
[1.424547] (articubot_one) StdoutLine: {'line': b'1:         :param parameter_overrides: A list of overrides for initial values for parameters declared\n'}
[1.424760] (articubot_one) StdoutLine: {'line': b'1:             on the node.\n'}
[1.424909] (articubot_one) StdoutLine: {'line': b'1:         :param allow_undeclared_parameters: True if undeclared parameters are allowed.\n'}
[1.425052] (articubot_one) StdoutLine: {'line': b'1:             This flag affects the behavior of parameter-related operations.\n'}
[1.425194] (articubot_one) StdoutLine: {'line': b'1:         :param automatically_declare_parameters_from_overrides: If True, the "parameter overrides"\n'}
[1.425337] (articubot_one) StdoutLine: {'line': b'1:             will be used to implicitly declare parameters on the node during creation.\n'}
[1.425483] (articubot_one) StdoutLine: {'line': b'1:         :param enable_logger_service: ``True`` if ROS2 services are created to allow external nodes\n'}
[1.425697] (articubot_one) StdoutLine: {'line': b'1:             to get and set logger levels of this node. Otherwise, logger levels are only managed\n'}
[1.425867] (articubot_one) StdoutLine: {'line': b'1:             locally. That is, logger levels cannot be changed remotely.\n'}
[1.426016] (articubot_one) StdoutLine: {'line': b'1:         """\n'}
[1.426160] (articubot_one) StdoutLine: {'line': b'1:         self.__handle = None\n'}
[1.426303] (articubot_one) StdoutLine: {'line': b'1:         self._context = get_default_context() if context is None else context\n'}
[1.426444] (articubot_one) StdoutLine: {'line': b'1:         self._parameters: dict = {}\n'}
[1.426587] (articubot_one) StdoutLine: {'line': b'1:         self._publishers: List[Publisher] = []\n'}
[1.426776] (articubot_one) StdoutLine: {'line': b'1:         self._subscriptions: List[Subscription] = []\n'}
[1.426947] (articubot_one) StdoutLine: {'line': b'1:         self._clients: List[Client] = []\n'}
[1.427113] (articubot_one) StdoutLine: {'line': b'1:         self._services: List[Service] = []\n'}
[1.427257] (articubot_one) StdoutLine: {'line': b'1:         self._timers: List[Timer] = []\n'}
[1.427397] (articubot_one) StdoutLine: {'line': b'1:         self._guards: List[GuardCondition] = []\n'}
[1.427536] (articubot_one) StdoutLine: {'line': b'1:         self.__waitables: List[Waitable] = []\n'}
[1.427733] (articubot_one) StdoutLine: {'line': b'1:         self._default_callback_group = MutuallyExclusiveCallbackGroup()\n'}
[1.427888] (articubot_one) StdoutLine: {'line': b'1:         self._pre_set_parameters_callbacks: List[Callable[[List[Parameter]], List[Parameter]]] = []\n'}
[1.428031] (articubot_one) StdoutLine: {'line': b'1:         self._on_set_parameters_callbacks: \\\n'}
[1.428173] (articubot_one) StdoutLine: {'line': b'1:             List[Callable[[List[Parameter]], SetParametersResult]] = []\n'}
[1.428326] (articubot_one) StdoutLine: {'line': b'1:         self._post_set_parameters_callbacks: List[Callable[[List[Parameter]], None]] = []\n'}
[1.428468] (articubot_one) StdoutLine: {'line': b'1:         self._rate_group = ReentrantCallbackGroup()\n'}
[1.428606] (articubot_one) StdoutLine: {'line': b'1:         self._allow_undeclared_parameters = allow_undeclared_parameters\n'}
[1.428814] (articubot_one) StdoutLine: {'line': b'1:         self._parameter_overrides = {}\n'}
[1.428972] (articubot_one) StdoutLine: {'line': b'1:         self._descriptors = {}\n'}
[1.429116] (articubot_one) StdoutLine: {'line': b'1:     \n'}
[1.429257] (articubot_one) StdoutLine: {'line': b"1:         namespace = namespace or ''\n"}
[1.429400] (articubot_one) StdoutLine: {'line': b'1:         if not self._context.ok():\n'}
[1.429541] (articubot_one) StdoutLine: {'line': b"1: >           raise NotInitializedException('cannot create node')\n"}
[1.429701] (articubot_one) StdoutLine: {'line': b'1: E           rclpy.exceptions.NotInitializedException: rclpy.init() has not been called. msg:cannot create node\n'}
[1.429850] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.429990] (articubot_one) StdoutLine: {'line': b'1: /opt/ros/jazzy/lib/python3.12/site-packages/rclpy/node.py:184: NotInitializedException\n'}
[1.430130] (articubot_one) StdoutLine: {'line': b'1: ________________________________ test_obstacle _________________________________\n'}
[1.430269] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.430407] (articubot_one) StdoutLine: {'line': b'1:     def test_obstacle():\n'}
[1.430548] (articubot_one) StdoutLine: {'line': b'1:         rclpy.init\n'}
[1.430710] (articubot_one) StdoutLine: {'line': b'1:         try :\n'}
[1.430874] (articubot_one) StdoutLine: {'line': b'1: >           node=Obstacle()\n'}
[1.431050] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.431416] (articubot_one) StdoutLine: {'line': b'1: ../../src/articubot_one/test/pytest/test_laserObstacle.py:33: \n'}
[1.431602] (articubot_one) StdoutLine: {'line': b'1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n'}
[1.431806] (articubot_one) StdoutLine: {'line': b'1: ../../install/articubot_one/lib/python3.12/site-packages/articubot_one/obstacle_avoidance.py:15: in __init__\n'}
[1.431984] (articubot_one) StdoutLine: {'line': b'1:     super().__init__("Laser_Obstacle_Avoidance")\n'}
[1.432167] (articubot_one) StdoutLine: {'line': b'1: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n'}
[1.432311] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.432454] (articubot_one) StdoutLine: {'line': b'1: self = <articubot_one.obstacle_avoidance.Obstacle object at 0x7215e5796210>\n'}
[1.432592] (articubot_one) StdoutLine: {'line': b"1: node_name = 'Laser_Obstacle_Avoidance'\n"}
[1.432802] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.432948] (articubot_one) StdoutLine: {'line': b'1:     def __init__(\n'}
[1.433086] (articubot_one) StdoutLine: {'line': b'1:         self,\n'}
[1.433226] (articubot_one) StdoutLine: {'line': b'1:         node_name: str,\n'}
[1.433366] (articubot_one) StdoutLine: {'line': b'1:         *,\n'}
[1.433508] (articubot_one) StdoutLine: {'line': b'1:         context: Optional[Context] = None,\n'}
[1.433692] (articubot_one) StdoutLine: {'line': b'1:         cli_args: Optional[List[str]] = None,\n'}
[1.433847] (articubot_one) StdoutLine: {'line': b'1:         namespace: Optional[str] = None,\n'}
[1.434057] (articubot_one) StdoutLine: {'line': b'1:         use_global_arguments: bool = True,\n'}
[1.434206] (articubot_one) StdoutLine: {'line': b'1:         enable_rosout: bool = True,\n'}
[1.434348] (articubot_one) StdoutLine: {'line': b'1:         start_parameter_services: bool = True,\n'}
[1.434487] (articubot_one) StdoutLine: {'line': b'1:         parameter_overrides: Optional[List[Parameter]] = None,\n'}
[1.434637] (articubot_one) StdoutLine: {'line': b'1:         allow_undeclared_parameters: bool = False,\n'}
[1.434812] (articubot_one) StdoutLine: {'line': b'1:         automatically_declare_parameters_from_overrides: bool = False,\n'}
[1.435025] (articubot_one) StdoutLine: {'line': b'1:         enable_logger_service: bool = False\n'}
[1.435191] (articubot_one) StdoutLine: {'line': b'1:     ) -> None:\n'}
[1.435330] (articubot_one) StdoutLine: {'line': b'1:         """\n'}
[1.435468] (articubot_one) StdoutLine: {'line': b'1:         Create a Node.\n'}
[1.435604] (articubot_one) StdoutLine: {'line': b'1:     \n'}
[1.435819] (articubot_one) StdoutLine: {'line': b'1:         :param node_name: A name to give to this node. Validated by :func:`validate_node_name`.\n'}
[1.435966] (articubot_one) StdoutLine: {'line': b'1:         :param context: The context to be associated with, or ``None`` for the default global\n'}
[1.436106] (articubot_one) StdoutLine: {'line': b'1:             context.\n'}
[1.436245] (articubot_one) StdoutLine: {'line': b'1:         :param cli_args: A list of strings of command line args to be used only by this node.\n'}
[1.436383] (articubot_one) StdoutLine: {'line': b'1:             These arguments are used to extract remappings used by the node and other ROS specific\n'}
[1.436518] (articubot_one) StdoutLine: {'line': b'1:             settings, as well as user defined non-ROS arguments.\n'}
[1.436689] (articubot_one) StdoutLine: {'line': b'1:         :param namespace: The namespace to which relative topic and service names will be prefixed.\n'}
[1.436858] (articubot_one) StdoutLine: {'line': b'1:             Validated by :func:`validate_namespace`.\n'}
[1.437003] (articubot_one) StdoutLine: {'line': b'1:         :param use_global_arguments: ``False`` if the node should ignore process-wide command line\n'}
[1.437145] (articubot_one) StdoutLine: {'line': b'1:             args.\n'}
[1.437286] (articubot_one) StdoutLine: {'line': b'1:         :param enable_rosout: ``False`` if the node should ignore rosout logging.\n'}
[1.437422] (articubot_one) StdoutLine: {'line': b'1:         :param start_parameter_services: ``False`` if the node should not create parameter\n'}
[1.437565] (articubot_one) StdoutLine: {'line': b'1:             services.\n'}
[1.437719] (articubot_one) StdoutLine: {'line': b'1:         :param parameter_overrides: A list of overrides for initial values for parameters declared\n'}
[1.437860] (articubot_one) StdoutLine: {'line': b'1:             on the node.\n'}
[1.437996] (articubot_one) StdoutLine: {'line': b'1:         :param allow_undeclared_parameters: True if undeclared parameters are allowed.\n'}
[1.438129] (articubot_one) StdoutLine: {'line': b'1:             This flag affects the behavior of parameter-related operations.\n'}
[1.438264] (articubot_one) StdoutLine: {'line': b'1:         :param automatically_declare_parameters_from_overrides: If True, the "parameter overrides"\n'}
[1.438401] (articubot_one) StdoutLine: {'line': b'1:             will be used to implicitly declare parameters on the node during creation.\n'}
[1.438536] (articubot_one) StdoutLine: {'line': b'1:         :param enable_logger_service: ``True`` if ROS2 services are created to allow external nodes\n'}
[1.438692] (articubot_one) StdoutLine: {'line': b'1:             to get and set logger levels of this node. Otherwise, logger levels are only managed\n'}
[1.438834] (articubot_one) StdoutLine: {'line': b'1:             locally. That is, logger levels cannot be changed remotely.\n'}
[1.438969] (articubot_one) StdoutLine: {'line': b'1:         """\n'}
[1.439105] (articubot_one) StdoutLine: {'line': b'1:         self.__handle = None\n'}
[1.439243] (articubot_one) StdoutLine: {'line': b'1:         self._context = get_default_context() if context is None else context\n'}
[1.439373] (articubot_one) StdoutLine: {'line': b'1:         self._parameters: dict = {}\n'}
[1.439508] (articubot_one) StdoutLine: {'line': b'1:         self._publishers: List[Publisher] = []\n'}
[1.439648] (articubot_one) StdoutLine: {'line': b'1:         self._subscriptions: List[Subscription] = []\n'}
[1.439794] (articubot_one) StdoutLine: {'line': b'1:         self._clients: List[Client] = []\n'}
[1.439928] (articubot_one) StdoutLine: {'line': b'1:         self._services: List[Service] = []\n'}
[1.440061] (articubot_one) StdoutLine: {'line': b'1:         self._timers: List[Timer] = []\n'}
[1.440191] (articubot_one) StdoutLine: {'line': b'1:         self._guards: List[GuardCondition] = []\n'}
[1.440320] (articubot_one) StdoutLine: {'line': b'1:         self.__waitables: List[Waitable] = []\n'}
[1.440452] (articubot_one) StdoutLine: {'line': b'1:         self._default_callback_group = MutuallyExclusiveCallbackGroup()\n'}
[1.440594] (articubot_one) StdoutLine: {'line': b'1:         self._pre_set_parameters_callbacks: List[Callable[[List[Parameter]], List[Parameter]]] = []\n'}
[1.440745] (articubot_one) StdoutLine: {'line': b'1:         self._on_set_parameters_callbacks: \\\n'}
[1.440880] (articubot_one) StdoutLine: {'line': b'1:             List[Callable[[List[Parameter]], SetParametersResult]] = []\n'}
[1.441012] (articubot_one) StdoutLine: {'line': b'1:         self._post_set_parameters_callbacks: List[Callable[[List[Parameter]], None]] = []\n'}
[1.441143] (articubot_one) StdoutLine: {'line': b'1:         self._rate_group = ReentrantCallbackGroup()\n'}
[1.441273] (articubot_one) StdoutLine: {'line': b'1:         self._allow_undeclared_parameters = allow_undeclared_parameters\n'}
[1.441405] (articubot_one) StdoutLine: {'line': b'1:         self._parameter_overrides = {}\n'}
[1.441535] (articubot_one) StdoutLine: {'line': b'1:         self._descriptors = {}\n'}
[1.441678] (articubot_one) StdoutLine: {'line': b'1:     \n'}
[1.441821] (articubot_one) StdoutLine: {'line': b"1:         namespace = namespace or ''\n"}
[1.441950] (articubot_one) StdoutLine: {'line': b'1:         if not self._context.ok():\n'}
[1.442078] (articubot_one) StdoutLine: {'line': b"1: >           raise NotInitializedException('cannot create node')\n"}
[1.442209] (articubot_one) StdoutLine: {'line': b'1: E           rclpy.exceptions.NotInitializedException: rclpy.init() has not been called. msg:cannot create node\n'}
[1.442352] (articubot_one) StdoutLine: {'line': b'1: \n'}
[1.442497] (articubot_one) StdoutLine: {'line': b'1: /opt/ros/jazzy/lib/python3.12/site-packages/rclpy/node.py:184: NotInitializedException\n'}
[1.442650] (articubot_one) StdoutLine: {'line': b'1: - generated xml file: /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/laser_obstacle_test.xunit.xml -\n'}
[1.442807] (articubot_one) StdoutLine: {'line': b'1: =========================== short test summary info ============================\n'}
[1.442952] (articubot_one) StdoutLine: {'line': b'1: FAILED ../../src/articubot_one/test/pytest/test_laserObstacle.py::test_node_creation\n'}
[1.443099] (articubot_one) StdoutLine: {'line': b'1: FAILED ../../src/articubot_one/test/pytest/test_laserObstacle.py::test_obstacle\n'}
[1.443259] (articubot_one) StdoutLine: {'line': b'1: ========================= 2 failed, 1 passed in 0.71s ==========================\n'}
[1.508850] (-) TimerEvent: {}
[1.538540] (articubot_one) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[1.538962] (articubot_one) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/laser_obstacle_test.xunit.xml'\n"}
[1.552607] (articubot_one) StdoutLine: {'line': b'1/6 Test #1: laser_obstacle_test ..............***Failed    1.42 sec\n'}
[1.552977] (articubot_one) StdoutLine: {'line': b'test 2\n'}
[1.553295] (articubot_one) StdoutLine: {'line': b'    Start 2: copyright\n'}
[1.553492] (articubot_one) StdoutLine: {'line': b'\n'}
[1.553695] (articubot_one) StdoutLine: {'line': b'2: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/copyright.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_copyright/copyright.txt" "--command" "/opt/ros/jazzy/bin/ament_copyright" "--xunit-file" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/copyright.xunit.xml"\n'}
[1.553902] (articubot_one) StdoutLine: {'line': b'2: Working Directory: /home/jonatan/ros2_ws/src/articubot_one\n'}
[1.554085] (articubot_one) StdoutLine: {'line': b'2: Test timeout computed to be: 200\n'}
[1.609014] (-) TimerEvent: {}
[1.651019] (articubot_one) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/src/articubot_one':\n"}
[1.651237] (articubot_one) StdoutLine: {'line': b'2:  - /opt/ros/jazzy/bin/ament_copyright --xunit-file /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/copyright.xunit.xml\n'}
[1.709151] (-) TimerEvent: {}
[1.809424] (-) TimerEvent: {}
[1.909705] (-) TimerEvent: {}
[1.992728] (articubot_one) StdoutLine: {'line': b'2: CONTRIBUTING.md: file not found\n'}
[1.992970] (articubot_one) StdoutLine: {'line': b'2: LICENSE: file not found\n'}
[1.993070] (articubot_one) StdoutLine: {'line': b'2: articubot_one/obstacle_avoidance.py: could not find copyright notice\n'}
[1.993161] (articubot_one) StdoutLine: {'line': b'2: launch/ball_tracker.launch.py: could not find copyright notice\n'}
[1.993246] (articubot_one) StdoutLine: {'line': b'2: launch/camera.launch.py: could not find copyright notice\n'}
[1.993328] (articubot_one) StdoutLine: {'line': b'2: launch/joystick.launch.py: could not find copyright notice\n'}
[1.993408] (articubot_one) StdoutLine: {'line': b'2: launch/launch_robot.launch.py: could not find copyright notice\n'}
[1.993511] (articubot_one) StdoutLine: {'line': b'2: launch/launch_sim.launch.py: could not find copyright notice\n'}
[1.993591] (articubot_one) StdoutLine: {'line': b'2: launch/online_async_launch.py: could not find copyright notice\n'}
[1.993712] (articubot_one) StdoutLine: {'line': b'2: launch/rplidar.launch.py: could not find copyright notice\n'}
[1.993801] (articubot_one) StdoutLine: {'line': b'2: launch/rsp.launch.py: could not find copyright notice\n'}
[1.993882] (articubot_one) StdoutLine: {'line': b'2: launch/rviz_gazebo.launch.py: could not find copyright notice\n'}
[1.993962] (articubot_one) StdoutLine: {'line': b'2: test/pytest/test_laserObstacle.py: could not find copyright notice\n'}
[1.994043] (articubot_one) StdoutLine: {'line': b'2: 13 errors, checked 16 files\n'}
[2.008889] (articubot_one) StdoutLine: {'line': b'2: -- run_test.py: return code 1\n'}
[2.009157] (articubot_one) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/copyright.xunit.xml'\n"}
[2.009777] (-) TimerEvent: {}
[2.023151] (articubot_one) StdoutLine: {'line': b'2/6 Test #2: copyright ........................***Failed    0.47 sec\n'}
[2.023525] (articubot_one) StdoutLine: {'line': b'test 3\n'}
[2.023757] (articubot_one) StdoutLine: {'line': b'    Start 3: flake8\n'}
[2.023873] (articubot_one) StdoutLine: {'line': b'\n'}
[2.023960] (articubot_one) StdoutLine: {'line': b'3: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/flake8.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_flake8/flake8.txt" "--command" "/opt/ros/jazzy/bin/ament_flake8" "--xunit-file" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/flake8.xunit.xml"\n'}
[2.024050] (articubot_one) StdoutLine: {'line': b'3: Working Directory: /home/jonatan/ros2_ws/src/articubot_one\n'}
[2.024133] (articubot_one) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[2.097009] (articubot_one) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/src/articubot_one':\n"}
[2.097182] (articubot_one) StdoutLine: {'line': b'3:  - /opt/ros/jazzy/bin/ament_flake8 --xunit-file /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/flake8.xunit.xml\n'}
[2.109875] (-) TimerEvent: {}
[2.210158] (-) TimerEvent: {}
[2.310425] (-) TimerEvent: {}
[2.410699] (-) TimerEvent: {}
[2.513676] (-) TimerEvent: {}
[2.580404] (articubot_one) StdoutLine: {'line': b'3: from geometry_msgs.msg import Twist\n'}
[2.581482] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.581731] (articubot_one) StdoutLine: {'line': b'3: import math\n'}
[2.581957] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.582175] (articubot_one) StdoutLine: {'line': b'3: import math\n'}
[2.582382] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.582575] (articubot_one) StdoutLine: {'line': b'3: # i am writing down this piece of code with paramters \n'}
[2.584557] (articubot_one) StdoutLine: {'line': b'3:                                                      ^\n'}
[2.585350] (articubot_one) StdoutLine: {'line': b'3: # Paramters are for the node , it enables modularity and you can modify the parameters when executing the node \n'}
[2.585508] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.585675] (articubot_one) StdoutLine: {'line': b'3: # Paramters are for the node , it enables modularity and you can modify the parameters when executing the node \n'}
[2.585835] (articubot_one) StdoutLine: {'line': b'3:                                                                                                               ^\n'}
[2.585980] (articubot_one) StdoutLine: {'line': b'3:     def __init__(self) :\n'}
[2.586123] (articubot_one) StdoutLine: {'line': b'3:                       ^\n'}
[2.586277] (articubot_one) StdoutLine: {'line': b'3:         super().__init__("Laser_Obstacle_Avoidance")\n'}
[2.586467] (articubot_one) StdoutLine: {'line': b'3:                          ^\n'}
[2.586656] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.586830] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.587028] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("threshold_distance",0.5)  # i can use 0.5m or 1m as threshold distance\n'}
[2.587224] (articubot_one) StdoutLine: {'line': b'3:                                ^\n'}
[2.587419] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("threshold_distance",0.5)  # i can use 0.5m or 1m as threshold distance\n'}
[2.587616] (articubot_one) StdoutLine: {'line': b'3:                                                    ^\n'}
[2.587844] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("threshold_distance",0.5)  # i can use 0.5m or 1m as threshold distance\n'}
[2.588031] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.588191] (articubot_one) StdoutLine: {'line': b'3:         self.threshold=self.get_parameter("threshold_distance").value\n'}
[2.588399] (articubot_one) StdoutLine: {'line': b'3:                       ^\n'}
[2.588606] (articubot_one) StdoutLine: {'line': b'3:         self.threshold=self.get_parameter("threshold_distance").value\n'}
[2.588808] (articubot_one) StdoutLine: {'line': b'3:                                           ^\n'}
[2.589024] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.589232] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.589437] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("laser_scan_topic","/scan")\n'}
[2.589652] (articubot_one) StdoutLine: {'line': b'3:                                ^\n'}
[2.589872] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("laser_scan_topic","/scan")\n'}
[2.590079] (articubot_one) StdoutLine: {'line': b'3:                                                  ^\n'}
[2.590298] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("laser_scan_topic","/scan")\n'}
[2.590504] (articubot_one) StdoutLine: {'line': b'3:                                                   ^\n'}
[2.590722] (articubot_one) StdoutLine: {'line': b'3:         self.laser_topic=self.get_parameter("laser_scan_topic").value\n'}
[2.590933] (articubot_one) StdoutLine: {'line': b'3:                         ^\n'}
[2.591143] (articubot_one) StdoutLine: {'line': b'3:         self.laser_topic=self.get_parameter("laser_scan_topic").value\n'}
[2.591322] (articubot_one) StdoutLine: {'line': b'3:                                             ^\n'}
[2.591777] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.592029] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.592228] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("cmd_vel_topic","/cmd_vel")\n'}
[2.592400] (articubot_one) StdoutLine: {'line': b'3:                                ^\n'}
[2.592570] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("cmd_vel_topic","/cmd_vel")\n'}
[2.593004] (articubot_one) StdoutLine: {'line': b'3:                                               ^\n'}
[2.593205] (articubot_one) StdoutLine: {'line': b'3:         self.declare_parameter("cmd_vel_topic","/cmd_vel")\n'}
[2.593377] (articubot_one) StdoutLine: {'line': b'3:                                                ^\n'}
[2.593547] (articubot_one) StdoutLine: {'line': b'3:         self.cmd_topic=self.get_parameter("cmd_vel_topic").value\n'}
[2.593735] (articubot_one) StdoutLine: {'line': b'3:                       ^\n'}
[2.593909] (articubot_one) StdoutLine: {'line': b'3:         self.cmd_topic=self.get_parameter("cmd_vel_topic").value\n'}
[2.594080] (articubot_one) StdoutLine: {'line': b'3:                                           ^\n'}
[2.594250] (articubot_one) StdoutLine: {'line': b"3:         self.frontal_detection_angle_rad = math.radians(self.get_parameter('frontal_detection_angle_deg').value)\n"}
[2.594420] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.594590] (articubot_one) StdoutLine: {'line': b'3:         #create a publisher to the /cmd_vel\n'}
[2.594776] (articubot_one) StdoutLine: {'line': b'3:         ^\n'}
[2.594947] (articubot_one) StdoutLine: {'line': b'3:         self.cmd_vel_pub = self.create_publisher(Twist,self.cmd_topic, 10)\n'}
[2.595117] (articubot_one) StdoutLine: {'line': b'3:                                                       ^\n'}
[2.595286] (articubot_one) StdoutLine: {'line': b'3:     def laser_callback(self,msg):\n'}
[2.595455] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.595624] (articubot_one) StdoutLine: {'line': b'3:     def laser_callback(self,msg):\n'}
[2.595815] (articubot_one) StdoutLine: {'line': b'3:                            ^\n'}
[2.595984] (articubot_one) StdoutLine: {'line': b'3:   \n'}
[2.596153] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.596321] (articubot_one) StdoutLine: {'line': b'3:         if not(scan_size) :\n'}
[2.596521] (articubot_one) StdoutLine: {'line': b'3:               ^\n'}
[2.596706] (articubot_one) StdoutLine: {'line': b'3:         if not(scan_size) :\n'}
[2.596883] (articubot_one) StdoutLine: {'line': b'3:                          ^\n'}
[2.597053] (articubot_one) StdoutLine: {'line': b'3:             #no laser data \n'}
[2.597223] (articubot_one) StdoutLine: {'line': b'3:             ^\n'}
[2.597415] (articubot_one) StdoutLine: {'line': b'3:             #no laser data \n'}
[2.597586] (articubot_one) StdoutLine: {'line': b'3:                           ^\n'}
[2.597775] (articubot_one) StdoutLine: {'line': b'3:             return \n'}
[2.597946] (articubot_one) StdoutLine: {'line': b'3:                   ^\n'}
[2.598117] (articubot_one) StdoutLine: {'line': b'3:         # the lidar provides angles,angle step (common difference of the angle sequence), distances in meter\n'}
[2.598287] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.598458] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.598634] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.598814] (articubot_one) StdoutLine: {'line': b'3:         #for every angle in this sector, we get a valid distance and compare it with the angle_(i+1) in the sector so as to get the minimum distance\n'}
[2.598987] (articubot_one) StdoutLine: {'line': b'3:         ^\n'}
[2.599157] (articubot_one) StdoutLine: {'line': b'3:         #for every angle in this sector, we get a valid distance and compare it with the angle_(i+1) in the sector so as to get the minimum distance\n'}
[2.599328] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.599498] (articubot_one) StdoutLine: {'line': b"3:         #we get an angle, we get it's corresponding distance and compare it's distance with a min distance\n"}
[2.600016] (articubot_one) StdoutLine: {'line': b'3:         ^\n'}
[2.600476] (articubot_one) StdoutLine: {'line': b"3:         #we get an angle, we get it's corresponding distance and compare it's distance with a min distance\n"}
[2.600637] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.600798] (articubot_one) StdoutLine: {'line': b'3:         # At each round, we get the minimum distance since our objectif is to get the closest distance to an obstacle \n'}
[2.600947] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.601094] (articubot_one) StdoutLine: {'line': b'3:         # At each round, we get the minimum distance since our objectif is to get the closest distance to an obstacle \n'}
[2.601242] (articubot_one) StdoutLine: {'line': b'3:                                                                                                                      ^\n'}
[2.601388] (articubot_one) StdoutLine: {'line': b'3:         # we are sweeping across all the angles with the increment \n'}
[2.601536] (articubot_one) StdoutLine: {'line': b'3:                                                                   ^\n'}
[2.621246] (-) TimerEvent: {}
[2.621379] (articubot_one) StdoutLine: {'line': b'3:         # while sweeping we compare  only the ranges with the ones in the defined angle \n'}
[2.621563] (articubot_one) StdoutLine: {'line': b'3:                                                                                        ^\n'}
[2.621702] (articubot_one) StdoutLine: {'line': b'3:                  # If the range reading is valid (not inf or nan)\n'}
[2.621812] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.621912] (articubot_one) StdoutLine: {'line': b'3:                  # If the range reading is valid (not inf or nan)\n'}
[2.622009] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.622104] (articubot_one) StdoutLine: {'line': b'3:                  if not math.isinf(msg.ranges[i]) and not math.isnan(msg.ranges[i]):\n'}
[2.622203] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.622301] (articubot_one) StdoutLine: {'line': b'3:                  if not math.isinf(msg.ranges[i]) and not math.isnan(msg.ranges[i]):\n'}
[2.622425] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.622529] (articubot_one) StdoutLine: {'line': b'3:             \n'}
[2.622648] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.622764] (articubot_one) StdoutLine: {'line': b'3:                      min_distance_in_frontal_sector = min(min_distance_in_frontal_sector, msg.ranges[i])\n'}
[2.622865] (articubot_one) StdoutLine: {'line': b'3:                      ^\n'}
[2.623059] (articubot_one) StdoutLine: {'line': b'3:                      min_distance_in_frontal_sector = min(min_distance_in_frontal_sector, msg.ranges[i])\n'}
[2.623300] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.623543] (articubot_one) StdoutLine: {'line': b'3:         #  To stop the robot from moving ahead when ever it meets an obstacle, it will just go back \n'}
[2.623814] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.624060] (articubot_one) StdoutLine: {'line': b'3:         if obstacle_detected :\n'}
[2.624280] (articubot_one) StdoutLine: {'line': b'3:                             ^\n'}
[2.624480] (articubot_one) StdoutLine: {'line': b"3:            self.get_logger().info(f'Obstacle detected at {min_distance_in_frontal_sector:.2f}m. Deciding to stop.')\n"}
[2.624680] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.624878] (articubot_one) StdoutLine: {'line': b"3:            self.get_logger().info(f'Obstacle detected at {min_distance_in_frontal_sector:.2f}m. Deciding to stop.')\n"}
[2.625058] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.625252] (articubot_one) StdoutLine: {'line': b'3:            twist.linear.x = 0.0\n'}
[2.625483] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.625701] (articubot_one) StdoutLine: {'line': b'3:            twist.angular.z =0.0\n'}
[2.625949] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.626198] (articubot_one) StdoutLine: {'line': b'3:            twist.angular.z =0.0\n'}
[2.626426] (articubot_one) StdoutLine: {'line': b'3:                             ^\n'}
[2.626604] (articubot_one) StdoutLine: {'line': b'3:            self.cmd_vel_pub.publish(twist)\n'}
[2.626766] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.626874] (articubot_one) StdoutLine: {'line': b"3:            self.get_logger().info(f'No obstacle detected') \n"}
[2.626977] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.627075] (articubot_one) StdoutLine: {'line': b"3:            self.get_logger().info(f'No obstacle detected') \n"}
[2.627175] (articubot_one) StdoutLine: {'line': b'3:                                   ^\n'}
[2.627275] (articubot_one) StdoutLine: {'line': b"3:            self.get_logger().info(f'No obstacle detected') \n"}
[2.627377] (articubot_one) StdoutLine: {'line': b'3:                                                           ^\n'}
[2.627478] (articubot_one) StdoutLine: {'line': b'3: def main(args=None):\n'}
[2.627576] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.627699] (articubot_one) StdoutLine: {'line': b'3:         rclpy.spin(node) # Keep the node running and process callbacks\n'}
[2.627804] (articubot_one) StdoutLine: {'line': b'3:                         ^\n'}
[2.627901] (articubot_one) StdoutLine: {'line': b"3:         node.get_logger().info('Smart Obstacle Avoider Node stopped cleanly via KeyboardInterrupt.')\n"}
[2.628009] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.628143] (articubot_one) StdoutLine: {'line': b"3: if __name__ == '__main__':\n"}
[2.628246] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.628347] (articubot_one) StdoutLine: {'line': b'3:     main()    \n'}
[2.628445] (articubot_one) StdoutLine: {'line': b'3:           ^\n'}
[2.628544] (articubot_one) StdoutLine: {'line': b'3: from ament_index_python.packages import get_package_share_directory\n'}
[2.628660] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.628772] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import DeclareLaunchArgument\n'}
[2.628871] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.628968] (articubot_one) StdoutLine: {'line': b"3:     my_package_name='articubot_one'\n"}
[2.629067] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.629165] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_sim = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_sim.yaml')\n"}
[2.629266] (articubot_one) StdoutLine: {'line': b'3:                                                                                   ^\n'}
[2.629364] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_sim = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_sim.yaml')\n"}
[2.629464] (articubot_one) StdoutLine: {'line': b'3:                                                                                            ^\n'}
[2.629563] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_sim = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_sim.yaml')\n"}
[2.629676] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.629782] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_robot = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_robot.yaml')\n"}
[2.629881] (articubot_one) StdoutLine: {'line': b'3:                                                                                     ^\n'}
[2.630003] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_robot = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_robot.yaml')\n"}
[2.630105] (articubot_one) StdoutLine: {'line': b'3:                                                                                              ^\n'}
[2.630204] (articubot_one) StdoutLine: {'line': b"3:     tracker_params_robot = os.path.join(get_package_share_directory(my_package_name),'config','ball_tracker_params_robot.yaml')\n"}
[2.630304] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.630403] (articubot_one) StdoutLine: {'line': b'3:     params_path = PythonExpression([\'"\',tracker_params_sim, \'" if "true" == "\', sim_mode, \'" else "\', tracker_params_robot, \'"\'])\n'}
[2.630519] (articubot_one) StdoutLine: {'line': b'3:                                        ^\n'}
[2.630620] (articubot_one) StdoutLine: {'line': b'3:     params_path = PythonExpression([\'"\',tracker_params_sim, \'" if "true" == "\', sim_mode, \'" else "\', tracker_params_robot, \'"\'])\n'}
[2.630741] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.630842] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory('ball_tracker'), 'launch', 'ball_tracker.launch.py')]),\n"}
[2.630942] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.631042] (articubot_one) StdoutLine: {'line': b"3:                     launch_arguments={'params_file': params_path,\n"}
[2.631143] (articubot_one) StdoutLine: {'line': b'3:                     ^\n'}
[2.631241] (articubot_one) StdoutLine: {'line': b"3:                                     'image_topic': '/camera/image_raw',\n"}
[2.631340] (articubot_one) StdoutLine: {'line': b'3:                                     ^\n'}
[2.631438] (articubot_one) StdoutLine: {'line': b"3:                                     'cmd_vel_topic': '/cmd_vel_tracker',\n"}
[2.631536] (articubot_one) StdoutLine: {'line': b'3:                                     ^\n'}
[2.631646] (articubot_one) StdoutLine: {'line': b"3:                                     'enable_3d_tracker': 'true'}.items())\n"}
[2.631757] (articubot_one) StdoutLine: {'line': b'3:                                     ^\n'}
[2.631856] (articubot_one) StdoutLine: {'line': b'3: import os\n'}
[2.631954] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.632052] (articubot_one) StdoutLine: {'line': b'3: def generate_launch_description():\n'}
[2.632151] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.632250] (articubot_one) StdoutLine: {'line': b'3:     return LaunchDescription([\n'}
[2.632348] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.632447] (articubot_one) StdoutLine: {'line': b"3:                 'image_size': [640,480],\n"}
[2.632545] (articubot_one) StdoutLine: {'line': b'3:                                   ^\n'}
[2.632654] (articubot_one) StdoutLine: {'line': b'3:     )\n'}
[2.632763] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.632863] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.632961] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:5:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from sensor_msgs.msg import LaserScan'\n"}
[2.633062] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.633160] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:6:1: I100 Import statements are in the wrong order. 'import math' should be before 'from geometry_msgs.msg import Twist' and in a different group.\n"}
[2.633261] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.633357] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:6:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from geometry_msgs.msg import Twist' is identified as Third Party.\n"}
[2.633471] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.633569] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:9:54: W291 trailing whitespace\n'}
[2.633684] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.633787] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:10:100: E501 line too long (110 > 99 characters)\n'}
[2.633887] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.633984] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:10:111: W291 trailing whitespace\n'}
[2.634081] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.634176] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:14:23: E203 whitespace before ':'\n"}
[2.634271] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.634369] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:15:26: Q000 Double quotes found but single quotes preferred\n'}
[2.634466] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.634563] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:16:1: W293 blank line contains whitespace\n'}
[2.634672] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.634777] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:17:32: Q000 Double quotes found but single quotes preferred\n'}
[2.634877] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.634974] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:17:52: E231 missing whitespace after ','\n"}
[2.635072] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.635168] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:17:100: E501 line too long (102 > 99 characters)\n'}
[2.635265] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.635361] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:18:23: E225 missing whitespace around operator\n'}
[2.635458] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.635555] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:18:43: Q000 Double quotes found but single quotes preferred\n'}
[2.635664] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.635768] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:19:1: W293 blank line contains whitespace\n'}
[2.635867] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.635964] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:20:32: Q000 Double quotes found but single quotes preferred\n'}
[2.636061] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.636157] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:20:50: E231 missing whitespace after ','\n"}
[2.636253] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.636348] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:20:51: Q000 Double quotes found but single quotes preferred\n'}
[2.636446] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.636544] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:21:25: E225 missing whitespace around operator\n'}
[2.636652] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.636760] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:21:45: Q000 Double quotes found but single quotes preferred\n'}
[2.636859] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.636956] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:22:1: W293 blank line contains whitespace\n'}
[2.637053] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.637148] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:23:32: Q000 Double quotes found but single quotes preferred\n'}
[2.637256] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.637358] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:23:47: E231 missing whitespace after ','\n"}
[2.637456] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.637554] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:23:48: Q000 Double quotes found but single quotes preferred\n'}
[2.637665] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.637770] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:24:23: E225 missing whitespace around operator\n'}
[2.637870] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.637967] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:24:43: Q000 Double quotes found but single quotes preferred\n'}
[2.638064] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.638162] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:29:100: E501 line too long (112 > 99 characters)\n'}
[2.638259] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.638356] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:38:9: E265 block comment should start with '# '\n"}
[2.638466] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.638563] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:39:55: E231 missing whitespace after ','\n"}
[2.638672] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.638776] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:43:5: E303 too many blank lines (2)\n'}
[2.638872] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.638968] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:43:28: E231 missing whitespace after ','\n"}
[2.639064] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.639160] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:47:1: W293 blank line contains whitespace\n'}
[2.639257] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.639355] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:48:15: E275 missing whitespace after keyword\n'}
[2.639452] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.639549] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:48:26: E203 whitespace before ':'\n"}
[2.639659] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.639764] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:49:13: E265 block comment should start with '# '\n"}
[2.639861] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.639957] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:49:27: W291 trailing whitespace\n'}
[2.640055] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.640153] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:50:19: W291 trailing whitespace\n'}
[2.640249] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.640345] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:51:100: E501 line too long (108 > 99 characters)\n'}
[2.640442] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.640541] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:56:1: W293 blank line contains whitespace\n'}
[2.640648] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.640756] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:60:9: E265 block comment should start with '# '\n"}
[2.640854] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.640951] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:60:100: E501 line too long (148 > 99 characters)\n'}
[2.641049] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.641145] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:61:9: E265 block comment should start with '# '\n"}
[2.641241] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.641337] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:61:100: E501 line too long (106 > 99 characters)\n'}
[2.641442] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.641539] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:62:100: E501 line too long (117 > 99 characters)\n'}
[2.641659] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.641773] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:62:118: W291 trailing whitespace\n'}
[2.641871] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.641968] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:64:67: W291 trailing whitespace\n'}
[2.642066] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.642163] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:65:88: W291 trailing whitespace\n'}
[2.642260] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.642357] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:75:18: E114 indentation is not a multiple of 4 (comment)\n'}
[2.642454] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.642550] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:75:18: E117 over-indented (comment)\n'}
[2.642657] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.642761] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:76:18: E111 indentation is not a multiple of 4\n'}
[2.642857] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.642953] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:76:18: E117 over-indented\n'}
[2.643051] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.643148] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:77:1: W293 blank line contains whitespace\n'}
[2.643244] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.643340] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:78:22: E111 indentation is not a multiple of 4\n'}
[2.643436] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.643530] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:78:100: E501 line too long (104 > 99 characters)\n'}
[2.643633] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.643778] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:86:100: W291 trailing whitespace\n'}
[2.643896] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.644011] (articubot_one) StdoutLine: {'line': b"3: ./articubot_one/obstacle_avoidance.py:87:29: E203 whitespace before ':'\n"}
[2.644148] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.644256] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:88:12: E111 indentation is not a multiple of 4\n'}
[2.644364] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.644469] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:88:100: E501 line too long (115 > 99 characters)\n'}
[2.644575] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.644715] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:89:12: E111 indentation is not a multiple of 4\n'}
[2.644830] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.644937] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:90:12: E111 indentation is not a multiple of 4\n'}
[2.645156] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.645310] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:90:29: E225 missing whitespace around operator\n'}
[2.645421] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.645524] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:91:12: E111 indentation is not a multiple of 4\n'}
[2.645625] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.645760] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:93:12: E111 indentation is not a multiple of 4\n'}
[2.645861] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.645959] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:93:35: F541 f-string is missing placeholders\n'}
[2.646067] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.646165] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:93:59: W291 trailing whitespace\n'}
[2.646263] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.646360] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:95:1: E302 expected 2 blank lines, found 1\n'}
[2.646456] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.646551] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:99:25: E261 at least two spaces before inline comment\n'}
[2.646671] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.646779] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:101:100: E501 line too long (100 > 99 characters)\n'}
[2.646878] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.646975] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:116:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[2.647074] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.647170] (articubot_one) StdoutLine: {'line': b'3: ./articubot_one/obstacle_avoidance.py:117:11: W291 trailing whitespace\n'}
[2.647267] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.647362] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:2:1: I201 Missing newline between import groups. 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party and 'import os' is identified as Stdlib.\n"}
[2.647463] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.647558] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:8:1: I100 Import statements are in the wrong order. 'from launch.actions import DeclareLaunchArgument' should be before 'from launch.substitutions import PythonExpression'\n"}
[2.647682] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.647786] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:13:20: E225 missing whitespace around operator\n'}
[2.647882] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.647978] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:17:83: E231 missing whitespace after ','\n"}
[2.648074] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.648170] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:17:92: E231 missing whitespace after ','\n"}
[2.648266] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.648362] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:17:100: E501 line too long (123 > 99 characters)\n'}
[2.648458] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.648553] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:18:85: E231 missing whitespace after ','\n"}
[2.648668] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.648774] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:18:94: E231 missing whitespace after ','\n"}
[2.648871] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.648969] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:18:100: E501 line too long (127 > 99 characters)\n'}
[2.649066] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.649162] (articubot_one) StdoutLine: {'line': b"3: ./launch/ball_tracker.launch.py:20:40: E231 missing whitespace after ','\n"}
[2.649259] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.649355] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:20:100: E501 line too long (129 > 99 characters)\n'}
[2.649452] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.649547] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:24:100: E501 line too long (103 > 99 characters)\n'}
[2.649654] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.649758] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:25:21: E131 continuation line unaligned for hanging indent\n'}
[2.649857] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.649954] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:26:37: E128 continuation line under-indented for visual indent\n'}
[2.650060] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.650156] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:27:37: E128 continuation line under-indented for visual indent\n'}
[2.650253] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.650349] (articubot_one) StdoutLine: {'line': b'3: ./launch/ball_tracker.launch.py:28:37: E128 continuation line under-indented for visual indent\n'}
[2.650444] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.650539] (articubot_one) StdoutLine: {'line': b"3: ./launch/camera.launch.py:1:1: F401 'os' imported but unused\n"}
[2.650657] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.650771] (articubot_one) StdoutLine: {'line': b'3: ./launch/camera.launch.py:6:1: E302 expected 2 blank lines, found 1\n'}
[2.650870] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.650967] (articubot_one) StdoutLine: {'line': b'3: ./launch/camera.launch.py:10:5: E303 too many blank lines (3)\n'}
[2.651066] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.651162] (articubot_one) StdoutLine: {'line': b"3: ./launch/camera.launch.py:18:35: E231 missing whitespace after ','\n"}
[2.651260] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.651356] (articubot_one) StdoutLine: {'line': b'3: ./launch/camera.launch.py:22:5: E122 continuation line missing indentation or outdented\n'}
[2.651453] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.651549] (articubot_one) StdoutLine: {'line': b'3: from launch.substitutions import LaunchConfiguration\n'}
[2.651667] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.651778] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import DeclareLaunchArgument\n'}
[2.651877] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.651973] (articubot_one) StdoutLine: {'line': b'3: import os\n'}
[2.652069] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.652164] (articubot_one) StdoutLine: {'line': b'3: from ament_index_python.packages import get_package_share_directory\n'}
[2.652261] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.652356] (articubot_one) StdoutLine: {'line': b'3: def generate_launch_description():\n'}
[2.652455] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.652553] (articubot_one) StdoutLine: {'line': b"3:     joy_params = os.path.join(get_package_share_directory('articubot_one'),'config','joystick.yaml')\n"}
[2.652676] (articubot_one) StdoutLine: {'line': b'3:                                                                           ^\n'}
[2.652793] (articubot_one) StdoutLine: {'line': b"3:     joy_params = os.path.join(get_package_share_directory('articubot_one'),'config','joystick.yaml')\n"}
[2.652894] (articubot_one) StdoutLine: {'line': b'3:                                                                                    ^\n'}
[2.652992] (articubot_one) StdoutLine: {'line': b"3:     joy_params = os.path.join(get_package_share_directory('articubot_one'),'config','joystick.yaml')\n"}
[2.653090] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.653187] (articubot_one) StdoutLine: {'line': b"3:             remappings=[('/cmd_vel','/cmd_vel_joy')]\n"}
[2.653284] (articubot_one) StdoutLine: {'line': b'3:                                    ^\n'}
[2.653382] (articubot_one) StdoutLine: {'line': b"3:             remappings=[('/cmd_vel_in','/diff_cont/cmd_vel_unstamped'),\n"}
[2.653481] (articubot_one) StdoutLine: {'line': b'3:                                       ^\n'}
[2.653578] (articubot_one) StdoutLine: {'line': b"3:                         ('/cmd_vel_out','/diff_cont/cmd_vel')]\n"}
[2.653702] (articubot_one) StdoutLine: {'line': b'3:                                        ^\n'}
[2.653807] (articubot_one) StdoutLine: {'line': b'3:     return LaunchDescription([\n'}
[2.653905] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.654003] (articubot_one) StdoutLine: {'line': b'3:         twist_stamper       \n'}
[2.654110] (articubot_one) StdoutLine: {'line': b'3:                      ^\n'}
[2.654208] (articubot_one) StdoutLine: {'line': b'3:     ])      ^\n'}
[2.654306] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import RegisterEventHandler\n'}
[2.654406] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.654505] (articubot_one) StdoutLine: {'line': b'3: def generate_launch_description():\n'}
[2.654604] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.654721] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.654823] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.654919] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.655016] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.655112] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.655211] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.655310] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.655409] (articubot_one) StdoutLine: {'line': b'3:                                 ^\n'}
[2.655507] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.655605] (articubot_one) StdoutLine: {'line': b'3:                                  ^\n'}
[2.655747] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.655851] (articubot_one) StdoutLine: {'line': b'3:                                                              ^\n'}
[2.655948] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.656046] (articubot_one) StdoutLine: {'line': b'3:                                                                       ^\n'}
[2.656145] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.656262] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.656360] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.656457] (articubot_one) StdoutLine: {'line': b'3:                                                                              ^\n'}
[2.656556] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.656681] (articubot_one) StdoutLine: {'line': b'3:                                                                                       ^\n'}
[2.656791] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.656889] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.656986] (articubot_one) StdoutLine: {'line': b'3:             package="twist_mux",\n'}
[2.657084] (articubot_one) StdoutLine: {'line': b'3:                     ^\n'}
[2.657182] (articubot_one) StdoutLine: {'line': b'3:             executable="twist_mux",\n'}
[2.657278] (articubot_one) StdoutLine: {'line': b'3:                        ^\n'}
[2.657375] (articubot_one) StdoutLine: {'line': b"3:             remappings=[('/cmd_vel_out','/diff_cont/cmd_vel_unstamped')]\n"}
[2.657475] (articubot_one) StdoutLine: {'line': b'3:                                        ^\n'}
[2.657571] (articubot_one) StdoutLine: {'line': b'3:     \n'}
[2.657691] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.657793] (articubot_one) StdoutLine: {'line': b"3:     robot_description = Command(['ros2 param get --hide-type /robot_state_publisher robot_description'])\n"}
[2.657899] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.657996] (articubot_one) StdoutLine: {'line': b"3:     robot_description = Command(['ros2 param get --hide-type /robot_state_publisher robot_description'])\n"}
[2.658096] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.658193] (articubot_one) StdoutLine: {'line': b"3:     controller_params_file = os.path.join(get_package_share_directory(package_name),'config','my_controllers.yaml')\n"}
[2.658290] (articubot_one) StdoutLine: {'line': b'3:                                                                                    ^\n'}
[2.658387] (articubot_one) StdoutLine: {'line': b"3:     controller_params_file = os.path.join(get_package_share_directory(package_name),'config','my_controllers.yaml')\n"}
[2.658484] (articubot_one) StdoutLine: {'line': b'3:                                                                                             ^\n'}
[2.658588] (articubot_one) StdoutLine: {'line': b"3:     controller_params_file = os.path.join(get_package_share_directory(package_name),'config','my_controllers.yaml')\n"}
[2.658710] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.658810] (articubot_one) StdoutLine: {'line': b'3:         package="controller_manager",\n'}
[2.658906] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.659002] (articubot_one) StdoutLine: {'line': b'3:         executable="ros2_control_node",\n'}
[2.659102] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.659200] (articubot_one) StdoutLine: {'line': b'3:         package="controller_manager",\n'}
[2.659297] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.659392] (articubot_one) StdoutLine: {'line': b'3:         executable="spawner",\n'}
[2.659486] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.659583] (articubot_one) StdoutLine: {'line': b'3:         arguments=["diff_cont"],\n'}
[2.659713] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.659818] (articubot_one) StdoutLine: {'line': b'3:         package="controller_manager",\n'}
[2.659918] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.660015] (articubot_one) StdoutLine: {'line': b'3:         executable="spawner",\n'}
[2.660113] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.660208] (articubot_one) StdoutLine: {'line': b'3:         arguments=["joint_broad"],\n'}
[2.660304] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.660400] (articubot_one) StdoutLine: {'line': b"3:     # Code for delaying a node (I haven't tested how effective it is)\n"}
[2.660497] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.660592] (articubot_one) StdoutLine: {'line': b'3:     # \n'}
[2.660720] (articubot_one) StdoutLine: {'line': b'3:      ^\n'}
[2.660821] (articubot_one) StdoutLine: {'line': b'3:     # Launch them all!\n'}
[2.660918] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.661015] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[2.661112] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.661208] (articubot_one) StdoutLine: {'line': b'3: def generate_launch_description():\n'}
[2.661303] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.661399] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.661495] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.661591] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.661712] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.661825] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.661923] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.662020] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.662117] (articubot_one) StdoutLine: {'line': b'3:                                 ^\n'}
[2.662213] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.662309] (articubot_one) StdoutLine: {'line': b'3:                                  ^\n'}
[2.662405] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.662503] (articubot_one) StdoutLine: {'line': b'3:                                                              ^\n'}
[2.662600] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.662724] (articubot_one) StdoutLine: {'line': b'3:                                                                       ^\n'}
[2.662826] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','joystick.launch.py'\n"}
[2.662924] (articubot_one) StdoutLine: {'line': b'3:                                                              ^\n'}
[2.663020] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','joystick.launch.py'\n"}
[2.663116] (articubot_one) StdoutLine: {'line': b'3:                                                                       ^\n'}
[2.663213] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.663310] (articubot_one) StdoutLine: {'line': b'3:                                                                              ^\n'}
[2.663407] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.663518] (articubot_one) StdoutLine: {'line': b'3:                                                                                       ^\n'}
[2.663616] (articubot_one) StdoutLine: {'line': b"3:     twist_mux_params = os.path.join(get_package_share_directory(package_name),'config','twist_mux.yaml')\n"}
[2.663744] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.663845] (articubot_one) StdoutLine: {'line': b'3:             package="twist_mux",\n'}
[2.663941] (articubot_one) StdoutLine: {'line': b'3:                     ^\n'}
[2.664038] (articubot_one) StdoutLine: {'line': b'3:             executable="twist_mux",\n'}
[2.664218] (articubot_one) StdoutLine: {'line': b'3:                        ^\n'}
[2.664452] (articubot_one) StdoutLine: {'line': b"3:             remappings=[('/cmd_vel_out','/diff_cont/cmd_vel_unstamped')]\n"}
[2.664813] (articubot_one) StdoutLine: {'line': b'3:                                        ^\n'}
[2.665120] (articubot_one) StdoutLine: {'line': b'3:     default_world = os.path.join(\n'}
[2.665354] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.665530] (articubot_one) StdoutLine: {'line': b'3:         )    \n'}
[2.665702] (articubot_one) StdoutLine: {'line': b'3:          ^\n'}
[2.665812] (articubot_one) StdoutLine: {'line': b'3:     \n'}
[2.665913] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.666013] (articubot_one) StdoutLine: {'line': b"3:                     launch_arguments={'gz_args': ['-r -v4 ', world], 'on_exit_shutdown': 'true'}.items()\n"}
[2.666218] (articubot_one) StdoutLine: {'line': b'3:                     ^\n'}
[2.666401] (articubot_one) StdoutLine: {'line': b"3:                     launch_arguments={'gz_args': ['-r -v4 ', world], 'on_exit_shutdown': 'true'}.items()\n"}
[2.666587] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.666743] (articubot_one) StdoutLine: {'line': b"3:     # Run the spawner node from the ros_gz_sim package. The entity name doesn't really matter if you only have a single robot.\n"}
[2.666853] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.666956] (articubot_one) StdoutLine: {'line': b'3:     diff_drive_spawner = Node(\n'}
[2.667053] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.667151] (articubot_one) StdoutLine: {'line': b'3:         package="controller_manager",\n'}
[2.667249] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.667350] (articubot_one) StdoutLine: {'line': b'3:         executable="spawner",\n'}
[2.667449] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.667546] (articubot_one) StdoutLine: {'line': b'3:         arguments=["diff_cont"],\n'}
[2.667654] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.667764] (articubot_one) StdoutLine: {'line': b'3:         package="controller_manager",\n'}
[2.667863] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.667960] (articubot_one) StdoutLine: {'line': b'3:         executable="spawner",\n'}
[2.668058] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.668155] (articubot_one) StdoutLine: {'line': b'3:         arguments=["joint_broad"],\n'}
[2.668254] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.668351] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.668451] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.668549] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.668668] (articubot_one) StdoutLine: {'line': b'3:                                                                           ^\n'}
[2.668777] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.668875] (articubot_one) StdoutLine: {'line': b'3:                                                                                    ^\n'}
[2.668974] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.669073] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.669172] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_bridge",\n'}
[2.669270] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.669367] (articubot_one) StdoutLine: {'line': b'3:         executable="parameter_bridge",\n'}
[2.669465] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.669562] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_image",\n'}
[2.669682] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.669787] (articubot_one) StdoutLine: {'line': b'3:         executable="image_bridge",\n'}
[2.669886] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.669983] (articubot_one) StdoutLine: {'line': b'3:         arguments=["/camera/image_raw"]\n'}
[2.670079] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.670176] (articubot_one) StdoutLine: {'line': b"3:     # Code for delaying a node (I haven't tested how effective it is)\n"}
[2.670276] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.670373] (articubot_one) StdoutLine: {'line': b'3:     # \n'}
[2.670470] (articubot_one) StdoutLine: {'line': b'3:      ^\n'}
[2.670566] (articubot_one) StdoutLine: {'line': b'3:     # Launch them all!\n'}
[2.670680] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.670786] (articubot_one) StdoutLine: {'line': b'3: from ament_index_python.packages import get_package_share_directory\n'}
[2.670894] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.670993] (articubot_one) StdoutLine: {'line': b'3:     default_params_file = os.path.join(get_package_share_directory("articubot_one"),\n'}
[2.671092] (articubot_one) StdoutLine: {'line': b'3:                                                                    ^\n'}
[2.671190] (articubot_one) StdoutLine: {'line': b'3: import os\n'}
[2.671288] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.671385] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:3:1: I100 Import statements are in the wrong order. 'from launch.substitutions import LaunchConfiguration' should be before 'from launch_ros.actions import Node'\n"}
[2.671484] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.671581] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:4:1: I100 Import statements are in the wrong order. 'from launch.actions import DeclareLaunchArgument' should be before 'from launch.substitutions import LaunchConfiguration'\n"}
[2.671700] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.671806] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:6:1: I100 Import statements are in the wrong order. 'import os' should be before 'from launch.actions import DeclareLaunchArgument' and in a different group.\n"}
[2.671908] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.672006] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:7:1: I201 Missing newline between import groups. 'from ament_index_python.packages import get_package_share_directory' is identified as Third Party and 'import os' is identified as Stdlib.\n"}
[2.672106] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.672202] (articubot_one) StdoutLine: {'line': b'3: ./launch/joystick.launch.py:9:1: E302 expected 2 blank lines, found 1\n'}
[2.672299] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.672394] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:12:75: E231 missing whitespace after ','\n"}
[2.672490] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.672587] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:12:84: E231 missing whitespace after ','\n"}
[2.672725] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.672828] (articubot_one) StdoutLine: {'line': b'3: ./launch/joystick.launch.py:12:100: E501 line too long (100 > 99 characters)\n'}
[2.672928] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.673025] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:25:36: E231 missing whitespace after ','\n"}
[2.673122] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.673218] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:32:39: E231 missing whitespace after ','\n"}
[2.673314] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.673411] (articubot_one) StdoutLine: {'line': b"3: ./launch/joystick.launch.py:33:40: E231 missing whitespace after ','\n"}
[2.673509] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.673606] (articubot_one) StdoutLine: {'line': b'3: ./launch/joystick.launch.py:37:5: E303 too many blank lines (2)\n'}
[2.673738] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.673842] (articubot_one) StdoutLine: {'line': b'3: ./launch/joystick.launch.py:44:22: W291 trailing whitespace\n'}
[2.673941] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.674037] (articubot_one) StdoutLine: {'line': b'3: ./launch/joystick.launch.py:45:7: W292 no newline at end of file\n'}
[2.674134] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.674229] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:10:1: I100 Import statements are in the wrong order. 'from launch.actions import RegisterEventHandler' should be before 'from launch.substitutions import Command'\n"}
[2.674330] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.674428] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:17:1: E303 too many blank lines (3)\n'}
[2.674526] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.674623] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:20:5: E303 too many blank lines (2)\n'}
[2.674750] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.674849] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:20:100: E501 line too long (110 > 99 characters)\n'}
[2.674948] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.675045] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:23:17: E225 missing whitespace around operator\n'}
[2.675142] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.675238] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:23:33: E261 at least two spaces before inline comment\n'}
[2.675335] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.675464] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:23:34: E262 inline comment should start with '# '\n"}
[2.675561] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.675675] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:27:62: E231 missing whitespace after ','\n"}
[2.675783] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.675879] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:27:71: E231 missing whitespace after ','\n"}
[2.675975] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.676070] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:38:5: E303 too many blank lines (2)\n'}
[2.676166] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.676263] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:38:78: E231 missing whitespace after ','\n"}
[2.676360] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.676456] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:38:87: E231 missing whitespace after ','\n"}
[2.676554] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.676669] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:38:100: E501 line too long (104 > 99 characters)\n'}
[2.676777] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.676873] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:40:21: Q000 Double quotes found but single quotes preferred\n'}
[2.676969] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.677064] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:41:24: Q000 Double quotes found but single quotes preferred\n'}
[2.677161] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.677257] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:43:40: E231 missing whitespace after ','\n"}
[2.677355] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.677451] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:46:1: W293 blank line contains whitespace\n'}
[2.677548] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.677656] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:49:5: E303 too many blank lines (4)\n'}
[2.677766] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.677862] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:49:100: E501 line too long (104 > 99 characters)\n'}
[2.677960] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.678057] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:51:84: E231 missing whitespace after ','\n"}
[2.678156] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.678252] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_robot.launch.py:51:93: E231 missing whitespace after ','\n"}
[2.678349] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.678446] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:51:100: E501 line too long (115 > 99 characters)\n'}
[2.678544] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.678652] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:54:17: Q000 Double quotes found but single quotes preferred\n'}
[2.678761] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.678859] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:55:20: Q000 Double quotes found but single quotes preferred\n'}
[2.678973] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.679070] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:63:17: Q000 Double quotes found but single quotes preferred\n'}
[2.679168] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.679264] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:64:20: Q000 Double quotes found but single quotes preferred\n'}
[2.679362] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.679459] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:65:20: Q000 Double quotes found but single quotes preferred\n'}
[2.679556] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.679671] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:76:17: Q000 Double quotes found but single quotes preferred\n'}
[2.679778] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.679876] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:77:20: Q000 Double quotes found but single quotes preferred\n'}
[2.679974] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.680070] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:78:20: Q000 Double quotes found but single quotes preferred\n'}
[2.680167] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.680263] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:89:5: E303 too many blank lines (2)\n'}
[2.680360] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.680455] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:90:6: W291 trailing whitespace\n'}
[2.680551] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.680665] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_robot.launch.py:107:5: E303 too many blank lines (3)\n'}
[2.680771] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.680869] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:7:1: I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[2.680968] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.681071] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:15:1: E303 too many blank lines (3)\n'}
[2.681198] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.681305] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:18:5: E303 too many blank lines (2)\n'}
[2.681492] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.681675] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:18:100: E501 line too long (110 > 99 characters)\n'}
[2.681790] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.681889] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:21:17: E225 missing whitespace around operator\n'}
[2.681987] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.682084] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:21:33: E261 at least two spaces before inline comment\n'}
[2.682184] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.682280] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:21:34: E262 inline comment should start with '# '\n"}
[2.682391] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.682489] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:25:62: E231 missing whitespace after ','\n"}
[2.682588] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.682709] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:25:71: E231 missing whitespace after ','\n"}
[2.682812] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.682909] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:31:62: E231 missing whitespace after ','\n"}
[2.683007] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.683104] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:31:71: E231 missing whitespace after ','\n"}
[2.683202] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.683298] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:35:78: E231 missing whitespace after ','\n"}
[2.683402] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.683499] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:35:87: E231 missing whitespace after ','\n"}
[2.683597] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.683717] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:35:100: E501 line too long (104 > 99 characters)\n'}
[2.683819] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.683916] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:37:21: Q000 Double quotes found but single quotes preferred\n'}
[2.684014] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.684111] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:38:24: Q000 Double quotes found but single quotes preferred\n'}
[2.684208] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.684304] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:40:40: E231 missing whitespace after ','\n"}
[2.684401] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.684500] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:44:5: E303 too many blank lines (2)\n'}
[2.684599] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.684730] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:48:10: W291 trailing whitespace\n'}
[2.684833] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.684931] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:49:1: W293 blank line contains whitespace\n'}
[2.685029] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.685125] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:62:21: E131 continuation line unaligned for hanging indent\n'}
[2.685223] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.685319] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:62:100: E501 line too long (104 > 99 characters)\n'}
[2.685417] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.685514] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:65:100: E501 line too long (126 > 99 characters)\n'}
[2.685611] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.685726] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:73:5: E303 too many blank lines (2)\n'}
[2.685826] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.685923] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:74:17: Q000 Double quotes found but single quotes preferred\n'}
[2.686019] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.686116] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:75:20: Q000 Double quotes found but single quotes preferred\n'}
[2.686214] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.686314] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:76:20: Q000 Double quotes found but single quotes preferred\n'}
[2.686413] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.686511] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:80:17: Q000 Double quotes found but single quotes preferred\n'}
[2.686609] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.686724] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:81:20: Q000 Double quotes found but single quotes preferred\n'}
[2.686825] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.686921] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:82:20: Q000 Double quotes found but single quotes preferred\n'}
[2.687017] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.687114] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:86:5: E303 too many blank lines (2)\n'}
[2.687213] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.687309] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:86:75: E231 missing whitespace after ','\n"}
[2.687406] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.687502] (articubot_one) StdoutLine: {'line': b"3: ./launch/launch_sim.launch.py:86:84: E231 missing whitespace after ','\n"}
[2.687606] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.687718] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:86:100: E501 line too long (101 > 99 characters)\n'}
[2.687820] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.687917] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:88:17: Q000 Double quotes found but single quotes preferred\n'}
[2.688015] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.688113] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:89:20: Q000 Double quotes found but single quotes preferred\n'}
[2.688211] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.688308] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:98:17: Q000 Double quotes found but single quotes preferred\n'}
[2.688405] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.688501] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:99:20: Q000 Double quotes found but single quotes preferred\n'}
[2.688598] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.688711] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:100:20: Q000 Double quotes found but single quotes preferred\n'}
[2.688810] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.688907] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:105:5: E303 too many blank lines (3)\n'}
[2.689004] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.689101] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:106:6: W291 trailing whitespace\n'}
[2.689198] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.689294] (articubot_one) StdoutLine: {'line': b'3: ./launch/launch_sim.launch.py:123:5: E303 too many blank lines (3)\n'}
[2.689397] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.689495] (articubot_one) StdoutLine: {'line': b"3: ./launch/online_async_launch.py:8:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.actions import Node'\n"}
[2.689595] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.689708] (articubot_one) StdoutLine: {'line': b'3: ./launch/online_async_launch.py:15:68: Q000 Double quotes found but single quotes preferred\n'}
[2.689809] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.689907] (articubot_one) StdoutLine: {'line': b"3: ./launch/rplidar.launch.py:1:1: F401 'os' imported but unused\n"}
[2.690005] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.690101] (articubot_one) StdoutLine: {'line': b"3: ./launch/rplidar.launch.py:2:1: I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.\n"}
[2.690200] (articubot_one) StdoutLine: {'line': b'3: from launch import LaunchDescription\n'}
[2.690298] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.690395] (articubot_one) StdoutLine: {'line': b'3: def generate_launch_description():\n'}
[2.690492] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.690588] (articubot_one) StdoutLine: {'line': b"3:                 'serial_port': '/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0-port0',\n"}
[2.690701] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.690803] (articubot_one) StdoutLine: {'line': b'3: from launch.substitutions import LaunchConfiguration, Command\n'}
[2.690901] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.690999] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import DeclareLaunchArgument\n'}
[2.691097] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.691195] (articubot_one) StdoutLine: {'line': b'3: import xacro\n'}
[2.691293] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.691390] (articubot_one) StdoutLine: {'line': b"3:     xacro_file = os.path.join(pkg_path,'description','robot.urdf.xacro')\n"}
[2.691500] (articubot_one) StdoutLine: {'line': b'3:                                       ^\n'}
[2.691605] (articubot_one) StdoutLine: {'line': b"3:     xacro_file = os.path.join(pkg_path,'description','robot.urdf.xacro')\n"}
[2.691720] (articubot_one) StdoutLine: {'line': b'3:                                                     ^\n'}
[2.691823] (articubot_one) StdoutLine: {'line': b"3:     robot_description_config = Command(['xacro ', xacro_file, ' use_ros2_control:=', use_ros2_control, ' sim_mode:=', use_sim_time])\n"}
[2.691923] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.692021] (articubot_one) StdoutLine: {'line': b'3:     \n'}
[2.692119] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.692216] (articubot_one) StdoutLine: {'line': b'3:     # Launch!\n'}
[2.692312] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.692409] (articubot_one) StdoutLine: {'line': b'3: import xacro\n'}
[2.692506] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.692604] (articubot_one) StdoutLine: {'line': b'3: from ament_index_python.packages import get_package_share_directory\n'}
[2.692718] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.692819] (articubot_one) StdoutLine: {'line': b'3: from launch.actions import IncludeLaunchDescription, DeclareLaunchArgument\n'}
[2.692917] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.693015] (articubot_one) StdoutLine: {'line': b'3: from launch.conditions import IfCondition, UnlessCondition\n'}
[2.693112] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.693208] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.693305] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.693403] (articubot_one) StdoutLine: {'line': b'3:     # Include the robot_state_publisher launch file, provided by our own package. Force sim time to be enabled\n'}
[2.693500] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.693599] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.693713] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.693815] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.693912] (articubot_one) StdoutLine: {'line': b'3:                                 ^\n'}
[2.694010] (articubot_one) StdoutLine: {'line': b"3:     package_name='articubot_one' #<--- CHANGE ME\n"}
[2.694108] (articubot_one) StdoutLine: {'line': b'3:                                  ^\n'}
[2.694205] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.694303] (articubot_one) StdoutLine: {'line': b'3:                                                              ^\n'}
[2.694401] (articubot_one) StdoutLine: {'line': b"3:                     get_package_share_directory(package_name),'launch','rsp.launch.py'\n"}
[2.694500] (articubot_one) StdoutLine: {'line': b'3:                                                                       ^\n'}
[2.694599] (articubot_one) StdoutLine: {'line': b'3:         )    \n'}
[2.694714] (articubot_one) StdoutLine: {'line': b'3:          ^\n'}
[2.694816] (articubot_one) StdoutLine: {'line': b'3:     \n'}
[2.694913] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.695010] (articubot_one) StdoutLine: {'line': b"3:                     launch_arguments={'gz_args': ['-r -v4 ', world], 'on_exit_shutdown': 'true'}.items()\n"}
[2.695107] (articubot_one) StdoutLine: {'line': b'3:                     ^\n'}
[2.695203] (articubot_one) StdoutLine: {'line': b"3:                     launch_arguments={'gz_args': ['-r -v4 ', world], 'on_exit_shutdown': 'true'}.items()\n"}
[2.695301] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.695400] (articubot_one) StdoutLine: {'line': b"3:     # Run the spawner node from the ros_gz_sim package. The entity name doesn't really matter if you only have a single robot.\n"}
[2.695506] (articubot_one) StdoutLine: {'line': b'3:                                                                                                    ^\n'}
[2.695604] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.695717] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.695818] (articubot_one) StdoutLine: {'line': b'3:     ros_gz_bridge = Node(\n'}
[2.695915] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_bridge",\n'}
[2.696018] (articubot_one) StdoutLine: {'line': b'3:         executable="parameter_bridge",\n'}
[2.696116] (articubot_one) StdoutLine: {'line': b'3:         arguments=[\n'}
[2.696213] (articubot_one) StdoutLine: {'line': b"3:             '--ros-args',\n"}
[2.696310] (articubot_one) StdoutLine: {'line': b"3:             '-p',\n"}
[2.696408] (articubot_one) StdoutLine: {'line': b"3:             f'config_file:={bridge_params}',\n"}
[2.696506] (articubot_one) StdoutLine: {'line': b'3:         ]\n'}
[2.696604] (articubot_one) StdoutLine: {'line': b'3:     )\n'}
[2.696716] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.696815] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.696911] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.697006] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.697105] (articubot_one) StdoutLine: {'line': b'3:     ros_gz_bridge = Node(\n'}
[2.697201] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_bridge",\n'}
[2.697299] (articubot_one) StdoutLine: {'line': b'3:         executable="parameter_bridge",\n'}
[2.697397] (articubot_one) StdoutLine: {'line': b'3:         arguments=[\n'}
[2.697493] (articubot_one) StdoutLine: {'line': b"3:             '--ros-args',\n"}
[2.697589] (articubot_one) StdoutLine: {'line': b"3:             '-p',\n"}
[2.697702] (articubot_one) StdoutLine: {'line': b"3:             f'config_file:={bridge_params}',\n"}
[2.697801] (articubot_one) StdoutLine: {'line': b'3:         ]\n'}
[2.697897] (articubot_one) StdoutLine: {'line': b'3:     )\n'}
[2.697994] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.698091] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.698189] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.698285] (articubot_one) StdoutLine: {'line': b"3:     bridge_params = os.path.join(get_package_share_directory(package_name),'config','gz_bridge.yaml')\n"}
[2.698383] (articubot_one) StdoutLine: {'line': b'3:     ros_gz_bridge = Node(\n'}
[2.698479] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_bridge",\n'}
[2.698574] (articubot_one) StdoutLine: {'line': b'3:         executable="parameter_bridge",\n'}
[2.698685] (articubot_one) StdoutLine: {'line': b'3:         arguments=[\n'}
[2.698786] (articubot_one) StdoutLine: {'line': b"3:             '--ros-args',\n"}
[2.698884] (articubot_one) StdoutLine: {'line': b"3:             '-p',\n"}
[2.698982] (articubot_one) StdoutLine: {'line': b"3:             f'config_file:={bridge_params}',\n"}
[2.699079] (articubot_one) StdoutLine: {'line': b'3:         ]\n'}
[2.699175] (articubot_one) StdoutLine: {'line': b'3:     )\n'}
[2.699273] (articubot_one) StdoutLine: {'line': b"3:     '''\n"}
[2.699369] (articubot_one) StdoutLine: {'line': b'3:        \n'}
[2.699466] (articubot_one) StdoutLine: {'line': b'3:                                                                                            ^\n'}
[2.699562] (articubot_one) StdoutLine: {'line': b"3:     package='ros_gz_bridge',\n"}
[2.699669] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.699774] (articubot_one) StdoutLine: {'line': b"3:     executable='parameter_bridge',\n"}
[2.699873] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.699970] (articubot_one) StdoutLine: {'line': b'3:     arguments=[\n'}
[2.700076] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.700173] (articubot_one) StdoutLine: {'line': b"3:           '/odom@nav_msgs/msg/Odometry@gz.msgs.Odometry',\n"}
[2.700269] (articubot_one) StdoutLine: {'line': b'3:           ^\n'}
[2.700366] (articubot_one) StdoutLine: {'line': b"3:          '/scan@sensor_msgs/msg/LaserScan@gz.msgs.LaserScan',\n"}
[2.700463] (articubot_one) StdoutLine: {'line': b'3:          ^\n'}
[2.700559] (articubot_one) StdoutLine: {'line': b"3:     output='screen'\n"}
[2.700668] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.700776] (articubot_one) StdoutLine: {'line': b'3: )\n'}
[2.700874] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.700971] (articubot_one) StdoutLine: {'line': b'3:         package="ros_gz_image",\n'}
[2.701068] (articubot_one) StdoutLine: {'line': b'3:                 ^\n'}
[2.701165] (articubot_one) StdoutLine: {'line': b'3:         executable="image_bridge",\n'}
[2.701262] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.701358] (articubot_one) StdoutLine: {'line': b'3:         arguments=["/camera/image_raw"]\n'}
[2.701456] (articubot_one) StdoutLine: {'line': b'3:                    ^\n'}
[2.701554] (articubot_one) StdoutLine: {'line': b'3:     #Adding rviz plugin\n'}
[2.701663] (articubot_one) StdoutLine: {'line': b'3:     ^\n'}
[2.701771] (articubot_one) StdoutLine: {'line': b"3:     share_dir=get_package_share_directory('articubot_one')\n"}
[2.701880] (articubot_one) StdoutLine: {'line': b'3:              ^\n'}
[2.701979] (articubot_one) StdoutLine: {'line': b'3:     \n'}
[2.702076] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.702173] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.702268] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.702365] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.702461] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.702560] (articubot_one) StdoutLine: {'line': b'3:         \n'}
[2.702668] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.702773] (articubot_one) StdoutLine: {'line': b'3: from sensor_msgs.msg import LaserScan\n'}
[2.702872] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.702968] (articubot_one) StdoutLine: {'line': b'3: from geometry_msgs.msg import Twist \n'}
[2.703066] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.703161] (articubot_one) StdoutLine: {'line': b'3: from geometry_msgs.msg import Twist \n'}
[2.703257] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.703354] (articubot_one) StdoutLine: {'line': b'3: from geometry_msgs.msg import Twist \n'}
[2.703453] (articubot_one) StdoutLine: {'line': b'3:                                    ^\n'}
[2.703550] (articubot_one) StdoutLine: {'line': b'3: from articubot_one.obstacle_avoidance import Obstacle \n'}
[2.703659] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.703765] (articubot_one) StdoutLine: {'line': b'3: from articubot_one.obstacle_avoidance import Obstacle \n'}
[2.703863] (articubot_one) StdoutLine: {'line': b'3:                                                      ^\n'}
[2.703962] (articubot_one) StdoutLine: {'line': b'3: def test_node_creation():\n'}
[2.704060] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.704159] (articubot_one) StdoutLine: {'line': b'3:     try :\n'}
[2.704258] (articubot_one) StdoutLine: {'line': b'3:        ^\n'}
[2.704358] (articubot_one) StdoutLine: {'line': b'3:         node=Obstacle()\n'}
[2.704458] (articubot_one) StdoutLine: {'line': b'3:             ^\n'}
[2.704557] (articubot_one) StdoutLine: {'line': b'3:         assert node.get_name()=="Laser_Obstacle_Avoidance"\n'}
[2.704668] (articubot_one) StdoutLine: {'line': b'3:                               ^\n'}
[2.704805] (articubot_one) StdoutLine: {'line': b'3:         assert node.get_name()=="Laser_Obstacle_Avoidance"\n'}
[2.704906] (articubot_one) StdoutLine: {'line': b'3:                                 ^\n'}
[2.705006] (articubot_one) StdoutLine: {'line': b"3:         assert hasattr(node,'laser_sub')\n"}
[2.705105] (articubot_one) StdoutLine: {'line': b'3:                            ^\n'}
[2.705214] (articubot_one) StdoutLine: {'line': b'3:         # verify that the node is publishing to the correct topic by name \n'}
[2.705316] (articubot_one) StdoutLine: {'line': b'3:                                                                          ^\n'}
[2.705416] (articubot_one) StdoutLine: {'line': b"3:         assert hasattr(node,'cmd_vel_pub')\n"}
[2.705515] (articubot_one) StdoutLine: {'line': b'3:                            ^\n'}
[2.705613] (articubot_one) StdoutLine: {'line': b'3:     finally :\n'}
[2.705729] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.705830] (articubot_one) StdoutLine: {'line': b'3: def test_parameter_node():\n'}
[2.705929] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.706028] (articubot_one) StdoutLine: {'line': b'3:     try :\n'}
[2.706125] (articubot_one) StdoutLine: {'line': b'3:        ^\n'}
[2.706223] (articubot_one) StdoutLine: {'line': b'3:     finally :\n'}
[2.706320] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.706417] (articubot_one) StdoutLine: {'line': b'3: def test_obstacle():\n'}
[2.706513] (articubot_one) StdoutLine: {'line': b'3: ^\n'}
[2.706609] (articubot_one) StdoutLine: {'line': b'3:     try :\n'}
[2.706722] (articubot_one) StdoutLine: {'line': b'3:        ^\n'}
[2.706822] (articubot_one) StdoutLine: {'line': b'3:         node=Obstacle()\n'}
[2.706920] (articubot_one) StdoutLine: {'line': b'3:             ^\n'}
[2.707018] (articubot_one) StdoutLine: {'line': b'3:         #get values of parameters\n'}
[2.707116] (articubot_one) StdoutLine: {'line': b'3:         ^\n'}
[2.707213] (articubot_one) StdoutLine: {'line': b"3:         threshold=node.get_parameter('threshold_distance').value\n"}
[2.707318] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.707415] (articubot_one) StdoutLine: {'line': b'3:         scan_topic=node.get_parameter("laser_scan_topic").value\n'}
[2.707512] (articubot_one) StdoutLine: {'line': b'3:                   ^\n'}
[2.707609] (articubot_one) StdoutLine: {'line': b'3:         scan_topic=node.get_parameter("laser_scan_topic").value\n'}
[2.707722] (articubot_one) StdoutLine: {'line': b'3:                                       ^\n'}
[2.707824] (articubot_one) StdoutLine: {'line': b'3:         cmd_topic=node.get_parameter("cmd_vel_topic").value\n'}
[2.707922] (articubot_one) StdoutLine: {'line': b'3:                  ^\n'}
[2.708020] (articubot_one) StdoutLine: {'line': b'3:         cmd_topic=node.get_parameter("cmd_vel_topic").value\n'}
[2.708118] (articubot_one) StdoutLine: {'line': b'3:                                      ^\n'}
[2.708215] (articubot_one) StdoutLine: {'line': b'3:         front_sector_angle=node.get_parameter("frontal_detection_angle_deg").value\n'}
[2.708314] (articubot_one) StdoutLine: {'line': b'3:                           ^\n'}
[2.708412] (articubot_one) StdoutLine: {'line': b'3:         front_sector_angle=node.get_parameter("frontal_detection_angle_deg").value\n'}
[2.708511] (articubot_one) StdoutLine: {'line': b'3:                                               ^\n'}
[2.708608] (articubot_one) StdoutLine: {'line': b'3:         # assert the values are correct as expected \n'}
[2.708721] (articubot_one) StdoutLine: {'line': b'3:                                                    ^\n'}
[2.708822] (articubot_one) StdoutLine: {'line': b'3:         # 1- check if the parameters are of expected classes \n'}
[2.708921] (articubot_one) StdoutLine: {'line': b'3:                                                             ^\n'}
[2.709019] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(threshold,float) ,f"expect the threshold to be a float"\n'}
[2.709118] (articubot_one) StdoutLine: {'line': b'3:                                    ^\n'}
[2.709216] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(threshold,float) ,f"expect the threshold to be a float"\n'}
[2.709314] (articubot_one) StdoutLine: {'line': b'3:                                           ^\n'}
[2.709410] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(threshold,float) ,f"expect the threshold to be a float"\n'}
[2.709516] (articubot_one) StdoutLine: {'line': b'3:                                            ^\n'}
[2.709615] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(threshold,float) ,f"expect the threshold to be a float"\n'}
[2.709731] (articubot_one) StdoutLine: {'line': b'3:                                             ^\n'}
[2.709832] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(threshold,float) ,f"expect the threshold to be a float"\n'}
[2.709930] (articubot_one) StdoutLine: {'line': b'3:                                             ^\n'}
[2.710028] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(scan_topic,str), f"expect the scan topic to be a string"\n'}
[2.710126] (articubot_one) StdoutLine: {'line': b'3:                                     ^\n'}
[2.710223] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(scan_topic,str), f"expect the scan topic to be a string"\n'}
[2.710320] (articubot_one) StdoutLine: {'line': b'3:                                            ^\n'}
[2.710417] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(scan_topic,str), f"expect the scan topic to be a string"\n'}
[2.710515] (articubot_one) StdoutLine: {'line': b'3:                                            ^\n'}
[2.710613] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(cmd_topic,str), f"expect the cmd velocity command to be a string"\n'}
[2.710727] (articubot_one) StdoutLine: {'line': b'3:                                    ^\n'}
[2.710828] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(cmd_topic,str), f"expect the cmd velocity command to be a string"\n'}
[2.710927] (articubot_one) StdoutLine: {'line': b'3:                                           ^\n'}
[2.711025] (articubot_one) StdoutLine: {'line': b'3:         assert isinstance(cmd_topic,str), f"expect the cmd velocity command to be a string"\n'}
[2.711124] (articubot_one) StdoutLine: {'line': b'3:                                           ^\n'}
[2.711221] (articubot_one) StdoutLine: {'line': b"3:         assert isinstance(front_sector_angle,float),f'expect the angle of sector to be a float'\n"}
[2.711320] (articubot_one) StdoutLine: {'line': b'3:                                             ^\n'}
[2.711417] (articubot_one) StdoutLine: {'line': b"3:         assert isinstance(front_sector_angle,float),f'expect the angle of sector to be a float'\n"}
[2.711527] (articubot_one) StdoutLine: {'line': b'3:                                                    ^\n'}
[2.711633] (articubot_one) StdoutLine: {'line': b"3:         assert isinstance(front_sector_angle,float),f'expect the angle of sector to be a float'\n"}
[2.711743] (articubot_one) StdoutLine: {'line': b'3:                                                     ^\n'}
[2.711841] (articubot_one) StdoutLine: {'line': b'3:         # 2- check if the values of the parameters are correct \n'}
[2.711940] (articubot_one) StdoutLine: {'line': b'3:                                                               ^\n'}
[2.712038] (articubot_one) StdoutLine: {'line': b'3:         assert scan_topic== "/scan"\n'}
[2.712135] (articubot_one) StdoutLine: {'line': b'3:                          ^\n'}
[2.712233] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.712331] (articubot_one) StdoutLine: {'line': b'3: ./launch/rplidar.launch.py:5:1: E302 expected 2 blank lines, found 1\n'}
[2.712430] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.712528] (articubot_one) StdoutLine: {'line': b'3: ./launch/rplidar.launch.py:14:100: E501 line too long (113 > 99 characters)\n'}
[2.712633] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.712741] (articubot_one) StdoutLine: {'line': b'3: ./launch/rsp.launch.py:6:1: I101 Imported names are in the wrong order. Should be Command, LaunchConfiguration\n'}
[2.712841] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.712937] (articubot_one) StdoutLine: {'line': b"3: ./launch/rsp.launch.py:7:1: I100 Import statements are in the wrong order. 'from launch.actions import DeclareLaunchArgument' should be before 'from launch.substitutions import LaunchConfiguration, Command'\n"}
[2.713049] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.713147] (articubot_one) StdoutLine: {'line': b"3: ./launch/rsp.launch.py:10:1: F401 'xacro' imported but unused\n"}
[2.713245] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.713343] (articubot_one) StdoutLine: {'line': b"3: ./launch/rsp.launch.py:21:39: E231 missing whitespace after ','\n"}
[2.713440] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.713537] (articubot_one) StdoutLine: {'line': b"3: ./launch/rsp.launch.py:21:53: E231 missing whitespace after ','\n"}
[2.713643] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.713750] (articubot_one) StdoutLine: {'line': b'3: ./launch/rsp.launch.py:23:100: E501 line too long (132 > 99 characters)\n'}
[2.713849] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.713946] (articubot_one) StdoutLine: {'line': b'3: ./launch/rsp.launch.py:24:1: W293 blank line contains whitespace\n'}
[2.714043] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.714141] (articubot_one) StdoutLine: {'line': b'3: ./launch/rsp.launch.py:35:5: E303 too many blank lines (2)\n'}
[2.714239] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.714336] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:2:1: I201 Missing newline between import groups. 'import xacro' is identified as Third Party and 'import os' is identified as Stdlib.\n"}
[2.714436] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.714533] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:3:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'import xacro'\n"}
[2.714640] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.714746] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:7:1: I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[2.714845] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.714941] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:12:1: I100 Import statements are in the wrong order. 'from launch.conditions import IfCondition, UnlessCondition' should be before 'from launch_ros.actions import Node'\n"}
[2.715041] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.715138] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:18:5: E303 too many blank lines (2)\n'}
[2.715235] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.715332] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:18:100: E501 line too long (110 > 99 characters)\n'}
[2.715429] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.715556] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:21:17: E225 missing whitespace around operator\n'}
[2.715663] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.715767] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:21:33: E261 at least two spaces before inline comment\n'}
[2.715864] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.715960] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:21:34: E262 inline comment should start with '# '\n"}
[2.716058] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.716197] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:25:62: E231 missing whitespace after ','\n"}
[2.716299] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.716398] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:25:71: E231 missing whitespace after ','\n"}
[2.716497] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.716594] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:33:10: W291 trailing whitespace\n'}
[2.716708] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.716809] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:34:1: W293 blank line contains whitespace\n'}
[2.716908] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.717015] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:47:21: E131 continuation line unaligned for hanging indent\n'}
[2.717115] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.717212] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:47:100: E501 line too long (104 > 99 characters)\n'}
[2.717310] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.717407] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:50:100: E501 line too long (126 > 99 characters)\n'}
[2.717505] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.717601] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:58:5: Q001 Single quote multiline found but double quotes preferred\n'}
[2.717716] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.717818] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:58:5: E303 too many blank lines (2)\n'}
[2.717918] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.718016] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:59:100: E501 line too long (101 > 99 characters)\n'}
[2.718115] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.718212] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:72:5: E122 continuation line missing indentation or outdented\n'}
[2.718311] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.718408] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:73:5: E122 continuation line missing indentation or outdented\n'}
[2.718506] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.718603] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:74:5: E122 continuation line missing indentation or outdented\n'}
[2.718716] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.718817] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:77:11: E131 continuation line unaligned for hanging indent\n'}
[2.718915] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.719013] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:78:10: E131 continuation line unaligned for hanging indent\n'}
[2.719111] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.719208] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:81:5: E122 continuation line missing indentation or outdented\n'}
[2.719306] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.719402] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:82:1: E122 continuation line missing indentation or outdented\n'}
[2.719499] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.719595] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:85:17: Q000 Double quotes found but single quotes preferred\n'}
[2.719735] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.719838] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:86:20: Q000 Double quotes found but single quotes preferred\n'}
[2.719938] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.720035] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:87:20: Q000 Double quotes found but single quotes preferred\n'}
[2.720133] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.720229] (articubot_one) StdoutLine: {'line': b"3: ./launch/rviz_gazebo.launch.py:89:5: E265 block comment should start with '# '\n"}
[2.720332] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.720429] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:90:14: E225 missing whitespace around operator\n'}
[2.720525] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.720621] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:96:1: W293 blank line contains whitespace\n'}
[2.720738] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.720837] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:136:1: W293 blank line contains whitespace\n'}
[2.720935] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.721033] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:140:1: W293 blank line contains whitespace\n'}
[2.721138] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.721235] (articubot_one) StdoutLine: {'line': b'3: ./launch/rviz_gazebo.launch.py:144:1: W293 blank line contains whitespace\n'}
[2.721330] (-) TimerEvent: {}
[2.721442] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.721638] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:5:1: F401 'sensor_msgs.msg.LaserScan' imported but unused\n"}
[2.721857] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.722107] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:6:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from sensor_msgs.msg import LaserScan'\n"}
[2.722313] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.722534] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:6:1: F401 'geometry_msgs.msg.Twist' imported but unused\n"}
[2.722790] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.722977] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:6:36: W291 trailing whitespace\n'}
[2.723151] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.723327] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:8:1: I100 Import statements are in the wrong order. 'from articubot_one.obstacle_avoidance import Obstacle' should be before 'from geometry_msgs.msg import Twist'\n"}
[2.723439] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.723540] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:8:54: W291 trailing whitespace\n'}
[2.723660] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.723776] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:10:1: E302 expected 2 blank lines, found 1\n'}
[2.723878] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.723977] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:12:8: E203 whitespace before ':'\n"}
[2.724076] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.724174] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:13:13: E225 missing whitespace around operator\n'}
[2.724274] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.724371] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:15:31: E225 missing whitespace around operator\n'}
[2.724468] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.724567] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:15:33: Q000 Double quotes found but single quotes preferred\n'}
[2.724694] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.724800] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:17:28: E231 missing whitespace after ','\n"}
[2.724901] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.724999] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:19:74: W291 trailing whitespace\n'}
[2.725134] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.725257] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:20:28: E231 missing whitespace after ','\n"}
[2.725359] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.725457] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:22:12: E203 whitespace before ':'\n"}
[2.725557] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.725690] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:24:1: E302 expected 2 blank lines, found 0\n'}
[2.725826] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.725928] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:26:8: E203 whitespace before ':'\n"}
[2.726026] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.726124] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:28:12: E203 whitespace before ':'\n"}
[2.726222] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.726332] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:30:1: E302 expected 2 blank lines, found 0\n'}
[2.726603] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.726770] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:32:8: E203 whitespace before ':'\n"}
[2.726880] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.726980] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:33:13: E225 missing whitespace around operator\n'}
[2.727080] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.727179] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:34:9: E265 block comment should start with '# '\n"}
[2.727278] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.727376] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:35:18: E225 missing whitespace around operator\n'}
[2.727475] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.727573] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:36:19: E225 missing whitespace around operator\n'}
[2.727709] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.727816] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:36:39: Q000 Double quotes found but single quotes preferred\n'}
[2.727917] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.728016] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:37:18: E225 missing whitespace around operator\n'}
[2.728114] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.728210] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:37:38: Q000 Double quotes found but single quotes preferred\n'}
[2.728309] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.728408] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:38:27: E225 missing whitespace around operator\n'}
[2.728507] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.728605] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:38:47: Q000 Double quotes found but single quotes preferred\n'}
[2.728727] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.728829] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:39:52: W291 trailing whitespace\n'}
[2.728926] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.729023] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:40:61: W291 trailing whitespace\n'}
[2.729120] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.729218] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:41:36: E231 missing whitespace after ','\n"}
[2.729327] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.729426] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:41:43: E203 whitespace before ','\n"}
[2.729525] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.729622] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:41:44: E231 missing whitespace after ','\n"}
[2.729745] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.729844] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:41:45: Q000 Double quotes found but single quotes preferred\n'}
[2.729941] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.730038] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:41:45: F541 f-string is missing placeholders\n'}
[2.730136] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.730233] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:42:37: E231 missing whitespace after ','\n"}
[2.730344] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.730439] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:42:44: Q000 Double quotes found but single quotes preferred\n'}
[2.730537] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.730652] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:42:44: F541 f-string is missing placeholders\n'}
[2.730766] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.730877] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:43:36: E231 missing whitespace after ','\n"}
[2.730974] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.731070] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:43:43: Q000 Double quotes found but single quotes preferred\n'}
[2.731169] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.731266] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:43:43: F541 f-string is missing placeholders\n'}
[2.731362] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.731459] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:44:45: E231 missing whitespace after ','\n"}
[2.731555] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.731675] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:44:52: E231 missing whitespace after ','\n"}
[2.731785] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.731882] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:44:53: F541 f-string is missing placeholders\n'}
[2.731979] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.732076] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:45:63: W291 trailing whitespace\n'}
[2.732172] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.732269] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:47:26: E225 missing whitespace around operator\n'}
[2.732365] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.732462] (articubot_one) StdoutLine: {'line': b'3:         assert scan_topic== "/scan"\n'}
[2.732559] (articubot_one) StdoutLine: {'line': b'3:                             ^\n'}
[2.732680] (articubot_one) StdoutLine: {'line': b'3:         assert cmd_topic == "/cmd_vel"\n'}
[2.732787] (articubot_one) StdoutLine: {'line': b'3:                             ^\n'}
[2.732886] (articubot_one) StdoutLine: {'line': b'3:         assert front_sector_angle == 60.0 \n'}
[2.732984] (articubot_one) StdoutLine: {'line': b'3:                                          ^\n'}
[2.733082] (articubot_one) StdoutLine: {'line': b'3:     finally :\n'}
[2.733179] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.733275] (articubot_one) StdoutLine: {'line': b"3: if __name__=='__main__' :\n"}
[2.733372] (articubot_one) StdoutLine: {'line': b'3:            ^\n'}
[2.733468] (articubot_one) StdoutLine: {'line': b"3: if __name__=='__main__' :\n"}
[2.733563] (articubot_one) StdoutLine: {'line': b'3:                        ^\n'}
[2.733669] (articubot_one) StdoutLine: {'line': b'3: 7     E111 indentation is not a multiple of 4\n'}
[2.733775] (articubot_one) StdoutLine: {'line': b'3: 1     E114 indentation is not a multiple of 4 (comment)\n'}
[2.733875] (articubot_one) StdoutLine: {'line': b'3: 2     E117 over-indented (comment)\n'}
[2.733972] (articubot_one) StdoutLine: {'line': b'3: 6     E122 continuation line missing indentation or outdented\n'}
[2.734069] (articubot_one) StdoutLine: {'line': b'3: 3     E128 continuation line under-indented for visual indent\n'}
[2.734217] (articubot_one) StdoutLine: {'line': b'3: 5     E131 continuation line unaligned for hanging indent\n'}
[2.734401] (articubot_one) StdoutLine: {'line': b"3: 11    E203 whitespace before ':'\n"}
[2.734509] (articubot_one) StdoutLine: {'line': b'3: 18    E225 missing whitespace around operator\n'}
[2.734609] (articubot_one) StdoutLine: {'line': b"3: 44    E231 missing whitespace after ','\n"}
[2.734725] (articubot_one) StdoutLine: {'line': b'3: 4     E261 at least two spaces before inline comment\n'}
[2.734828] (articubot_one) StdoutLine: {'line': b"3: 3     E262 inline comment should start with '# '\n"}
[2.734926] (articubot_one) StdoutLine: {'line': b"3: 6     E265 block comment should start with '# '\n"}
[2.735023] (articubot_one) StdoutLine: {'line': b'3: 1     E275 missing whitespace after keyword\n'}
[2.735120] (articubot_one) StdoutLine: {'line': b'3: 7     E302 expected 2 blank lines, found 1\n'}
[2.735217] (articubot_one) StdoutLine: {'line': b'3: 19    E303 too many blank lines (2)\n'}
[2.735324] (articubot_one) StdoutLine: {'line': b'3: 1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[2.735423] (articubot_one) StdoutLine: {'line': b'3: 30    E501 line too long (110 > 99 characters)\n'}
[2.735520] (articubot_one) StdoutLine: {'line': b"3: 5     F401 'os' imported but unused\n"}
[2.735618] (articubot_one) StdoutLine: {'line': b'3: 5     F541 f-string is missing placeholders\n'}
[2.735743] (articubot_one) StdoutLine: {'line': b"3: 13    I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from sensor_msgs.msg import LaserScan'\n"}
[2.735846] (articubot_one) StdoutLine: {'line': b'3: 3     I101 Imported names are in the wrong order. Should be DeclareLaunchArgument, IncludeLaunchDescription\n'}
[2.735944] (articubot_one) StdoutLine: {'line': b"3: 5     I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from geometry_msgs.msg import Twist' is identified as Third Party.\n"}
[2.736042] (articubot_one) StdoutLine: {'line': b'3: 45    Q000 Double quotes found but single quotes preferred\n'}
[2.736140] (articubot_one) StdoutLine: {'line': b'3: 1     Q001 Single quote multiline found but double quotes preferred\n'}
[2.736238] (articubot_one) StdoutLine: {'line': b'3: 22    W291 trailing whitespace\n'}
[2.736335] (articubot_one) StdoutLine: {'line': b'3: 1     W292 no newline at end of file\n'}
[2.736432] (articubot_one) StdoutLine: {'line': b'3: 14    W293 blank line contains whitespace\n'}
[2.736528] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:47:29: Q000 Double quotes found but single quotes preferred\n'}
[2.736640] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.736750] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:48:29: Q000 Double quotes found but single quotes preferred\n'}
[2.736848] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.736943] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:49:42: W291 trailing whitespace\n'}
[2.737040] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.737137] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:50:12: E203 whitespace before ':'\n"}
[2.737234] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.737329] (articubot_one) StdoutLine: {'line': b'3: ./test/pytest/test_laserObstacle.py:54:12: E225 missing whitespace around operator\n'}
[2.737427] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.737556] (articubot_one) StdoutLine: {'line': b"3: ./test/pytest/test_laserObstacle.py:54:24: E203 whitespace before ':'\n"}
[2.737698] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.737804] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.737899] (articubot_one) StdoutLine: {'line': b'3: 15 files checked\n'}
[2.737997] (articubot_one) StdoutLine: {'line': b'3: 282 errors\n'}
[2.738094] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.738191] (articubot_one) StdoutLine: {'line': b"3: 'E'-type errors: 168\n"}
[2.738289] (articubot_one) StdoutLine: {'line': b"3: 'F'-type errors: 10\n"}
[2.738386] (articubot_one) StdoutLine: {'line': b"3: 'I'-type errors: 21\n"}
[2.738482] (articubot_one) StdoutLine: {'line': b"3: 'Q'-type errors: 46\n"}
[2.738578] (articubot_one) StdoutLine: {'line': b"3: 'W'-type errors: 37\n"}
[2.738687] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.738789] (articubot_one) StdoutLine: {'line': b'3: Checked files:\n'}
[2.738886] (articubot_one) StdoutLine: {'line': b'3: \n'}
[2.738983] (articubot_one) StdoutLine: {'line': b'3: * ./setup.py\n'}
[2.739080] (articubot_one) StdoutLine: {'line': b'3: * ./test/pytest/test_laserObstacle.py\n'}
[2.739175] (articubot_one) StdoutLine: {'line': b'3: * ./articubot_one/obstacle_avoidance.py\n'}
[2.739271] (articubot_one) StdoutLine: {'line': b'3: * ./articubot_one/__init__.py\n'}
[2.739367] (articubot_one) StdoutLine: {'line': b'3: * ./launch/joystick.launch.py\n'}
[2.739463] (articubot_one) StdoutLine: {'line': b'3: * ./launch/online_async_launch.py\n'}
[2.739567] (articubot_one) StdoutLine: {'line': b'3: * ./launch/ball_tracker.launch.py\n'}
[2.739696] (articubot_one) StdoutLine: {'line': b'3: * ./launch/localization_launch.py\n'}
[2.739803] (articubot_one) StdoutLine: {'line': b'3: * ./launch/rviz_gazebo.launch.py\n'}
[2.739900] (articubot_one) StdoutLine: {'line': b'3: * ./launch/navigation_launch.py\n'}
[2.739998] (articubot_one) StdoutLine: {'line': b'3: * ./launch/rsp.launch.py\n'}
[2.740093] (articubot_one) StdoutLine: {'line': b'3: * ./launch/launch_robot.launch.py\n'}
[2.740202] (articubot_one) StdoutLine: {'line': b'3: * ./launch/camera.launch.py\n'}
[2.740299] (articubot_one) StdoutLine: {'line': b'3: * ./launch/rplidar.launch.py\n'}
[2.740394] (articubot_one) StdoutLine: {'line': b'3: * ./launch/launch_sim.launch.py\n'}
[2.740490] (articubot_one) StdoutLine: {'line': b'3: -- run_test.py: return code 1\n'}
[2.740586] (articubot_one) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/flake8.xunit.xml'\n"}
[2.740700] (articubot_one) StdoutLine: {'line': b'3/6 Test #3: flake8 ...........................***Failed    0.64 sec\n'}
[2.740802] (articubot_one) StdoutLine: {'line': b'test 4\n'}
[2.740899] (articubot_one) StdoutLine: {'line': b'    Start 4: lint_cmake\n'}
[2.740997] (articubot_one) StdoutLine: {'line': b'\n'}
[2.741097] (articubot_one) StdoutLine: {'line': b'4: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/lint_cmake.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/jazzy/bin/ament_lint_cmake" "--xunit-file" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/lint_cmake.xunit.xml"\n'}
[2.741204] (articubot_one) StdoutLine: {'line': b'4: Working Directory: /home/jonatan/ros2_ws/src/articubot_one\n'}
[2.741303] (articubot_one) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[2.763732] (articubot_one) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/src/articubot_one':\n"}
[2.763991] (articubot_one) StdoutLine: {'line': b'4:  - /opt/ros/jazzy/bin/ament_lint_cmake --xunit-file /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/lint_cmake.xunit.xml\n'}
[2.821495] (-) TimerEvent: {}
[2.901253] (articubot_one) StdoutLine: {'line': b'4: CMakeLists.txt:40: Line ends in whitespace [whitespace/eol]\n'}
[2.901592] (articubot_one) StdoutLine: {'line': b'4: CMakeLists.txt:55: Line ends in whitespace [whitespace/eol]\n'}
[2.901873] (articubot_one) StdoutLine: {'line': b'4: \n'}
[2.902093] (articubot_one) StdoutLine: {'line': b'4: \n'}
[2.902299] (articubot_one) StdoutLine: {'line': b'4: 2 errors\n'}
[2.917648] (articubot_one) StdoutLine: {'line': b'4: -- run_test.py: return code 1\n'}
[2.917863] (articubot_one) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/lint_cmake.xunit.xml'\n"}
[2.921649] (-) TimerEvent: {}
[2.931088] (articubot_one) StdoutLine: {'line': b'4/6 Test #4: lint_cmake .......................***Failed    0.27 sec\n'}
[2.931476] (articubot_one) StdoutLine: {'line': b'test 5\n'}
[2.931588] (articubot_one) StdoutLine: {'line': b'    Start 5: pep257\n'}
[2.931751] (articubot_one) StdoutLine: {'line': b'\n'}
[2.931857] (articubot_one) StdoutLine: {'line': b'5: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/pep257.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_pep257/pep257.txt" "--command" "/opt/ros/jazzy/bin/ament_pep257" "--xunit-file" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/pep257.xunit.xml"\n'}
[2.931954] (articubot_one) StdoutLine: {'line': b'5: Working Directory: /home/jonatan/ros2_ws/src/articubot_one\n'}
[2.932068] (articubot_one) StdoutLine: {'line': b'5: Test timeout computed to be: 60\n'}
[3.007434] (articubot_one) StdoutLine: {'line': b"5: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/src/articubot_one':\n"}
[3.007686] (articubot_one) StdoutLine: {'line': b'5:  - /opt/ros/jazzy/bin/ament_pep257 --xunit-file /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/pep257.xunit.xml\n'}
[3.021794] (-) TimerEvent: {}
[3.122444] (-) TimerEvent: {}
[3.222713] (-) TimerEvent: {}
[3.239640] (articubot_one) StdoutLine: {'line': b'5: checking ./articubot_one/__init__.py\n'}
[3.239919] (articubot_one) StdoutLine: {'line': b'5: checking ./articubot_one/obstacle_avoidance.py\n'}
[3.240082] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/ball_tracker.launch.py\n'}
[3.240238] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/camera.launch.py\n'}
[3.240376] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/joystick.launch.py\n'}
[3.240504] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/launch_robot.launch.py\n'}
[3.240690] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/launch_sim.launch.py\n'}
[3.240851] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/localization_launch.py\n'}
[3.240990] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/navigation_launch.py\n'}
[3.241129] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/online_async_launch.py\n'}
[3.241267] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/rplidar.launch.py\n'}
[3.241405] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/rsp.launch.py\n'}
[3.241545] (articubot_one) StdoutLine: {'line': b'5: checking ./launch/rviz_gazebo.launch.py\n'}
[3.241700] (articubot_one) StdoutLine: {'line': b'5: checking ./setup.py\n'}
[3.241847] (articubot_one) StdoutLine: {'line': b'5: checking ./test/pytest/test_laserObstacle.py\n'}
[3.241984] (articubot_one) StdoutLine: {'line': b'5: No problems found\n'}
[3.262865] (articubot_one) StdoutLine: {'line': b'5: -- run_test.py: return code 0\n'}
[3.263134] (articubot_one) StdoutLine: {'line': b"5: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/pep257.xunit.xml'\n"}
[3.274136] (articubot_one) StdoutLine: {'line': b'5/6 Test #5: pep257 ...........................   Passed    0.34 sec\n'}
[3.274412] (articubot_one) StdoutLine: {'line': b'test 6\n'}
[3.274507] (articubot_one) StdoutLine: {'line': b'    Start 6: xmllint\n'}
[3.274593] (articubot_one) StdoutLine: {'line': b'\n'}
[3.274708] (articubot_one) StdoutLine: {'line': b'6: Test command: /usr/bin/python3 "-u" "/opt/ros/jazzy/share/ament_cmake_test/cmake/run_test.py" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/xmllint.xunit.xml" "--package-name" "articubot_one" "--output-file" "/home/jonatan/ros2_ws/build/articubot_one/ament_xmllint/xmllint.txt" "--command" "/opt/ros/jazzy/bin/ament_xmllint" "--xunit-file" "/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/xmllint.xunit.xml"\n'}
[3.274803] (articubot_one) StdoutLine: {'line': b'6: Working Directory: /home/jonatan/ros2_ws/src/articubot_one\n'}
[3.274885] (articubot_one) StdoutLine: {'line': b'6: Test timeout computed to be: 60\n'}
[3.322809] (-) TimerEvent: {}
[3.354491] (articubot_one) StdoutLine: {'line': b"6: -- run_test.py: invoking following command in '/home/jonatan/ros2_ws/src/articubot_one':\n"}
[3.354735] (articubot_one) StdoutLine: {'line': b'6:  - /opt/ros/jazzy/bin/ament_xmllint --xunit-file /home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/xmllint.xunit.xml\n'}
[3.422916] (-) TimerEvent: {}
[3.523309] (-) TimerEvent: {}
[3.623740] (-) TimerEvent: {}
[3.724441] (-) TimerEvent: {}
[3.825134] (-) TimerEvent: {}
[3.925829] (-) TimerEvent: {}
[4.026491] (-) TimerEvent: {}
[4.127205] (-) TimerEvent: {}
[4.228025] (-) TimerEvent: {}
[4.328699] (-) TimerEvent: {}
[4.429372] (-) TimerEvent: {}
[4.530301] (-) TimerEvent: {}
[4.631026] (-) TimerEvent: {}
[4.731949] (-) TimerEvent: {}
[4.832769] (-) TimerEvent: {}
[4.933798] (-) TimerEvent: {}
[5.034571] (-) TimerEvent: {}
[5.135721] (-) TimerEvent: {}
[5.236493] (-) TimerEvent: {}
[5.337542] (-) TimerEvent: {}
[5.438670] (-) TimerEvent: {}
[5.539742] (-) TimerEvent: {}
[5.640781] (-) TimerEvent: {}
[5.741796] (-) TimerEvent: {}
[5.842492] (-) TimerEvent: {}
[5.943300] (-) TimerEvent: {}
[6.044332] (-) TimerEvent: {}
[6.145312] (-) TimerEvent: {}
[6.246392] (-) TimerEvent: {}
[6.347562] (-) TimerEvent: {}
[6.448753] (-) TimerEvent: {}
[6.549804] (-) TimerEvent: {}
[6.623290] (articubot_one) StdoutLine: {'line': b"6: File 'package.xml' is valid\n"}
[6.624031] (articubot_one) StdoutLine: {'line': b'6: \n'}
[6.624460] (articubot_one) StdoutLine: {'line': b'6: No problems found\n'}
[6.650030] (-) TimerEvent: {}
[6.684416] (articubot_one) StdoutLine: {'line': b'6: -- run_test.py: return code 0\n'}
[6.685833] (articubot_one) StdoutLine: {'line': b"6: -- run_test.py: verify result file '/home/jonatan/ros2_ws/build/articubot_one/test_results/articubot_one/xmllint.xunit.xml'\n"}
[6.725908] (articubot_one) StdoutLine: {'line': b'6/6 Test #6: xmllint ..........................   Passed    3.45 sec\n'}
[6.727468] (articubot_one) StdoutLine: {'line': b'\n'}
[6.729457] (articubot_one) StdoutLine: {'line': b'33% tests passed\x1b[0;0m, \x1b[0;31m4 tests failed\x1b[0;0m out of 6\n'}
[6.730331] (articubot_one) StdoutLine: {'line': b'\n'}
[6.731226] (articubot_one) StdoutLine: {'line': b'Label Time Summary:\n'}
[6.731962] (articubot_one) StdoutLine: {'line': b'copyright     =   0.47 sec*proc (1 test)\n'}
[6.732573] (articubot_one) StdoutLine: {'line': b'flake8        =   0.64 sec*proc (1 test)\n'}
[6.733262] (articubot_one) StdoutLine: {'line': b'lint_cmake    =   0.27 sec*proc (1 test)\n'}
[6.734012] (articubot_one) StdoutLine: {'line': b'linter        =   5.17 sec*proc (5 tests)\n'}
[6.734568] (articubot_one) StdoutLine: {'line': b'pep257        =   0.34 sec*proc (1 test)\n'}
[6.735199] (articubot_one) StdoutLine: {'line': b'pytest        =   1.42 sec*proc (1 test)\n'}
[6.735737] (articubot_one) StdoutLine: {'line': b'xmllint       =   3.45 sec*proc (1 test)\n'}
[6.736351] (articubot_one) StdoutLine: {'line': b'\n'}
[6.736929] (articubot_one) StdoutLine: {'line': b'Total Test time (real) =   6.60 sec\n'}
[6.737432] (articubot_one) StdoutLine: {'line': b'\n'}
[6.738007] (articubot_one) StdoutLine: {'line': b'The following tests FAILED:\n'}
[6.738514] (articubot_one) StdoutLine: {'line': b'\t\x1b[0;31m  1 - laser_obstacle_test (Failed)\x1b[0;0m\n'}
[6.739059] (articubot_one) StdoutLine: {'line': b'\t\x1b[0;31m  2 - copyright (Failed)\x1b[0;0m\n'}
[6.739585] (articubot_one) StdoutLine: {'line': b'\t\x1b[0;31m  3 - flake8 (Failed)\x1b[0;0m\n'}
[6.740129] (articubot_one) StdoutLine: {'line': b'\t\x1b[0;31m  4 - lint_cmake (Failed)\x1b[0;0m\n'}
[6.744475] (articubot_one) StderrLine: {'line': b'Errors while running CTest\n'}
[6.745104] (articubot_one) StderrLine: {'line': b'Output from these tests are in: /home/jonatan/ros2_ws/build/articubot_one/Testing/Temporary/LastTest.log\n'}
[6.745461] (articubot_one) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[6.750567] (-) TimerEvent: {}
[6.752525] (articubot_one) CommandEnded: {'returncode': 8}
[6.756222] (articubot_one) TestFailure: {'identifier': 'articubot_one'}
[6.756347] (articubot_one) JobEnded: {'identifier': 'articubot_one', 'rc': 0}
[6.758180] (-) EventReactorShutdown: {}
